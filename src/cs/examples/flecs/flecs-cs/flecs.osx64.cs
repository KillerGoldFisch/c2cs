
//-------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated (07/15/2021 01:36:09 UTC) by the following tool:
//        https://github.com/lithiumtoast/c2cs (v0.0.0.0)
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ReSharper disable All
//-------------------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Runtime.CompilerServices;
using C2CS;

#nullable enable
#pragma warning disable 1591

public static unsafe partial class flecs
{
    private const string LibraryName = "flecs";

    // Function @ stats.h:178:16 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/stats.h)
    [DllImport(LibraryName)]
    public static extern void ecs_gauge_reduce(ecs_gauge_t* dst, int t_dst, ecs_gauge_t* src, int t_src);

    // Function @ stats.h:172:16 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/stats.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_get_pipeline_stats(ecs_world_t* world, ecs_entity_t pipeline, ecs_pipeline_stats_t* stats);

    // Function @ stats.h:157:16 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/stats.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_get_system_stats(ecs_world_t* world, ecs_entity_t system, ecs_system_stats_t* stats);

    // Function @ stats.h:143:16 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/stats.h)
    [DllImport(LibraryName)]
    public static extern void ecs_get_query_stats(ecs_world_t* world, ecs_query_t* query, ecs_query_stats_t* s);

    // Function @ stats.h:132:16 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/stats.h)
    [DllImport(LibraryName)]
    public static extern void ecs_dump_world_stats(ecs_world_t* world, ecs_world_stats_t* stats);

    // Function @ stats.h:121:16 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/stats.h)
    [DllImport(LibraryName)]
    public static extern void ecs_get_world_stats(ecs_world_t* world, ecs_world_stats_t* stats);

    // Function @ direct_access.h:313:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/direct_access.h)
    [DllImport(LibraryName)]
    public static extern void ecs_record_move_to(ecs_world_t* world, ecs_record_t* r, int column, ulong size, void* value, int count);

    // Function @ direct_access.h:292:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/direct_access.h)
    [DllImport(LibraryName)]
    public static extern void ecs_record_copy_pod_to(ecs_world_t* world, ecs_record_t* r, int column, ulong size, void* value, int count);

    // Function @ direct_access.h:271:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/direct_access.h)
    [DllImport(LibraryName)]
    public static extern void ecs_record_copy_to(ecs_world_t* world, ecs_record_t* r, int column, ulong size, void* value, int count);

    // Function @ direct_access.h:249:7 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/direct_access.h)
    [DllImport(LibraryName)]
    public static extern void* ecs_record_get_column(ecs_record_t* r, int column, ulong size);

    // Function @ direct_access.h:237:15 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/direct_access.h)
    [DllImport(LibraryName)]
    public static extern ecs_record_t* ecs_record_ensure(ecs_world_t* world, ecs_entity_t entity);

    // Function @ direct_access.h:223:15 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/direct_access.h)
    [DllImport(LibraryName)]
    public static extern ecs_record_t* ecs_record_find(ecs_world_t* world, ecs_entity_t entity);

    // Function @ direct_access.h:197:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/direct_access.h)
    [DllImport(LibraryName)]
    public static extern void ecs_table_delete_column(ecs_world_t* world, ecs_table_t* table, int column, ecs_vector_t* vector);

    // Function @ direct_access.h:158:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/direct_access.h)
    [DllImport(LibraryName)]
    public static extern void ecs_table_set_entities(ecs_table_t* table, ecs_vector_t* entities, ecs_vector_t* records);

    // Function @ direct_access.h:133:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/direct_access.h)
    [DllImport(LibraryName)]
    public static extern void ecs_records_update(ecs_world_t* world, ecs_vector_t* entities, ecs_vector_t* records, ecs_table_t* table);

    // Function @ direct_access.h:121:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/direct_access.h)
    [DllImport(LibraryName)]
    public static extern void ecs_records_clear(ecs_vector_t* records);

    // Function @ direct_access.h:110:15 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/direct_access.h)
    [DllImport(LibraryName)]
    public static extern ecs_vector_t* ecs_table_get_records(ecs_table_t* table);

    // Function @ direct_access.h:98:15 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/direct_access.h)
    [DllImport(LibraryName)]
    public static extern ecs_vector_t* ecs_table_get_entities(ecs_table_t* table);

    // Function @ direct_access.h:83:15 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/direct_access.h)
    [DllImport(LibraryName)]
    public static extern ecs_vector_t* ecs_table_set_column(ecs_world_t* world, ecs_table_t* table, int column, ecs_vector_t* vector);

    // Function @ direct_access.h:50:15 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/direct_access.h)
    [DllImport(LibraryName)]
    public static extern ecs_vector_t* ecs_table_get_column(ecs_table_t* table, int column);

    // Function @ direct_access.h:34:9 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/direct_access.h)
    [DllImport(LibraryName)]
    public static extern int ecs_table_find_column(ecs_table_t* table, ecs_entity_t component);

    // Function @ snapshot.h:94:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/snapshot.h)
    [DllImport(LibraryName)]
    public static extern void ecs_snapshot_free(ecs_snapshot_t* snapshot);

    // Function @ snapshot.h:83:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/snapshot.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_snapshot_next(ecs_iter_t* iter);

    // Function @ snapshot.h:73:12 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/snapshot.h)
    [DllImport(LibraryName)]
    public static extern ecs_iter_t ecs_snapshot_iter(ecs_snapshot_t* snapshot, ecs_filter_t* filter);

    // Function @ snapshot.h:64:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/snapshot.h)
    [DllImport(LibraryName)]
    public static extern void ecs_snapshot_restore(ecs_world_t* world, ecs_snapshot_t* snapshot);

    // Function @ snapshot.h:45:17 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/snapshot.h)
    [DllImport(LibraryName)]
    public static extern ecs_snapshot_t* ecs_snapshot_take_w_iter(ecs_iter_t* iter, ecs_iter_next_action_t action);

    // Function @ snapshot.h:33:17 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/snapshot.h)
    [DllImport(LibraryName)]
    public static extern ecs_snapshot_t* ecs_snapshot_take(ecs_world_t* world);

    // Function @ reader_writer.h:213:9 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/reader_writer.h)
    [DllImport(LibraryName)]
    public static extern int ecs_writer_write(CString buffer, int size, ecs_writer_t* writer);

    // Function @ reader_writer.h:190:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/reader_writer.h)
    [DllImport(LibraryName)]
    public static extern ecs_writer_t ecs_writer_init(ecs_world_t* world);

    // Function @ reader_writer.h:171:9 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/reader_writer.h)
    [DllImport(LibraryName)]
    public static extern int ecs_reader_read(CString buffer, int size, ecs_reader_t* reader);

    // Function @ reader_writer.h:152:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/reader_writer.h)
    [DllImport(LibraryName)]
    public static extern ecs_reader_t ecs_reader_init_w_iter(ecs_iter_t* iter, ecs_iter_next_action_t next);

    // Function @ reader_writer.h:138:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/reader_writer.h)
    [DllImport(LibraryName)]
    public static extern ecs_reader_t ecs_reader_init(ecs_world_t* world);

    // Function @ queue.h:79:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/queue.h)
    [DllImport(LibraryName)]
    public static extern void ecs_queue_free(ecs_queue_t* queue);

    // Function @ queue.h:75:9 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/queue.h)
    [DllImport(LibraryName)]
    public static extern int ecs_queue_count(ecs_queue_t* queue);

    // Function @ queue.h:71:9 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/queue.h)
    [DllImport(LibraryName)]
    public static extern int ecs_queue_index(ecs_queue_t* queue);

    // Function @ queue.h:62:7 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/queue.h)
    [DllImport(LibraryName)]
    public static extern void* _ecs_queue_last(ecs_queue_t* queue, ecs_size_t elem_size, short offset);

    // Function @ queue.h:49:7 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/queue.h)
    [DllImport(LibraryName)]
    public static extern void* _ecs_queue_get(ecs_queue_t* queue, ecs_size_t elem_size, short offset, int index);

    // Function @ queue.h:40:7 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/queue.h)
    [DllImport(LibraryName)]
    public static extern void* _ecs_queue_push(ecs_queue_t* queue, ecs_size_t elem_size, short offset);

    // Function @ queue.h:30:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/queue.h)
    [DllImport(LibraryName)]
    public static extern ecs_queue_t* _ecs_queue_from_array(ecs_size_t elem_size, short offset, int elem_count, void* array);

    // Function @ queue.h:21:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/queue.h)
    [DllImport(LibraryName)]
    public static extern ecs_queue_t* _ecs_queue_new(ecs_size_t elem_size, short offset, int elem_count);

    // Function @ parser.h:46:7 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/parser.h)
    [DllImport(LibraryName)]
    public static extern CString ecs_parse_term(ecs_world_t* world, CString name, CString expr, CString ptr, ecs_term_t* term_out);

    // Function @ dbg.h:60:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/dbg.h)
    [DllImport(LibraryName)]
    public static extern void ecs_dbg_table(ecs_world_t* world, ecs_table_t* table, ecs_dbg_table_t* dbg_out);

    // Function @ dbg.h:54:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/dbg.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_dbg_filter_table(ecs_world_t* world, ecs_table_t* table, ecs_filter_t* filter);

    // Function @ dbg.h:49:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/dbg.h)
    [DllImport(LibraryName)]
    public static extern ecs_table_t* ecs_dbg_get_table(ecs_world_t* world, int index);

    // Function @ dbg.h:44:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/dbg.h)
    [DllImport(LibraryName)]
    public static extern ecs_table_t* ecs_dbg_find_table(ecs_world_t* world, ecs_type_t type);

    // Function @ dbg.h:38:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/dbg.h)
    [DllImport(LibraryName)]
    public static extern void ecs_dbg_entity(ecs_world_t* world, ecs_entity_t entity, ecs_dbg_entity_t* dbg_out);

    // Function @ bulk.h:127:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/bulk.h)
    [DllImport(LibraryName)]
    public static extern void ecs_bulk_delete(ecs_world_t* world, ecs_filter_t* filter);

    // Function @ bulk.h:102:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/bulk.h)
    [DllImport(LibraryName)]
    public static extern void ecs_bulk_add_remove_type(ecs_world_t* world, ecs_type_t to_add, ecs_type_t to_remove, ecs_filter_t* filter);

    // Function @ bulk.h:77:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/bulk.h)
    [DllImport(LibraryName)]
    public static extern void ecs_bulk_remove_type(ecs_world_t* world, ecs_type_t type, ecs_filter_t* filter);

    // Function @ bulk.h:63:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/bulk.h)
    [DllImport(LibraryName)]
    public static extern void ecs_bulk_remove_entity(ecs_world_t* world, ecs_entity_t entity_remove, ecs_filter_t* filter);

    // Function @ bulk.h:38:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/bulk.h)
    [DllImport(LibraryName)]
    public static extern void ecs_bulk_add_type(ecs_world_t* world, ecs_type_t type, ecs_filter_t* filter);

    // Function @ bulk.h:24:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/bulk.h)
    [DllImport(LibraryName)]
    public static extern void ecs_bulk_add_entity(ecs_world_t* world, ecs_entity_t entity_add, ecs_filter_t* filter);

    // Function @ timer.h:246:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/modules/timer.h)
    [DllImport(LibraryName)]
    public static extern void FlecsTimerImport(ecs_world_t* world);

    // Function @ timer.h:230:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/modules/timer.h)
    [DllImport(LibraryName)]
    public static extern void ecs_set_tick_source(ecs_world_t* world, ecs_entity_t system, ecs_entity_t tick_source);

    // Function @ timer.h:201:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/modules/timer.h)
    [DllImport(LibraryName)]
    public static extern ecs_entity_t ecs_set_rate(ecs_world_t* world, ecs_entity_t tick_source, int rate, ecs_entity_t source);

    // Function @ timer.h:166:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/modules/timer.h)
    [DllImport(LibraryName)]
    public static extern void ecs_stop_timer(ecs_world_t* world, ecs_entity_t tick_source);

    // Function @ timer.h:154:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/modules/timer.h)
    [DllImport(LibraryName)]
    public static extern void ecs_start_timer(ecs_world_t* world, ecs_entity_t tick_source);

    // Function @ timer.h:140:13 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/modules/timer.h)
    [DllImport(LibraryName)]
    public static extern float ecs_get_interval(ecs_world_t* world, ecs_entity_t tick_source);

    // Function @ timer.h:126:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/modules/timer.h)
    [DllImport(LibraryName)]
    public static extern ecs_entity_t ecs_set_interval(ecs_world_t* world, ecs_entity_t tick_source, float interval);

    // Function @ timer.h:104:13 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/modules/timer.h)
    [DllImport(LibraryName)]
    public static extern float ecs_get_timeout(ecs_world_t* world, ecs_entity_t tick_source);

    // Function @ timer.h:79:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/modules/timer.h)
    [DllImport(LibraryName)]
    public static extern ecs_entity_t ecs_set_timeout(ecs_world_t* world, ecs_entity_t tick_source, float timeout);

    // Function @ pipeline.h:169:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/modules/pipeline.h)
    [DllImport(LibraryName)]
    public static extern void FlecsPipelineImport(ecs_world_t* world);

    // Function @ pipeline.h:155:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/modules/pipeline.h)
    [DllImport(LibraryName)]
    public static extern void ecs_set_threads(ecs_world_t* world, int threads);

    // Function @ pipeline.h:141:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/modules/pipeline.h)
    [DllImport(LibraryName)]
    public static extern void ecs_deactivate_systems(ecs_world_t* world);

    // Function @ pipeline.h:125:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/modules/pipeline.h)
    [DllImport(LibraryName)]
    public static extern void ecs_pipeline_run(ecs_world_t* world, ecs_entity_t pipeline, float delta_time);

    // Function @ pipeline.h:103:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/modules/pipeline.h)
    [DllImport(LibraryName)]
    public static extern void ecs_reset_clock(ecs_world_t* world);

    // Function @ pipeline.h:93:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/modules/pipeline.h)
    [DllImport(LibraryName)]
    public static extern void ecs_set_time_scale(ecs_world_t* world, float scale);

    // Function @ pipeline.h:82:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/modules/pipeline.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_progress(ecs_world_t* world, float delta_time);

    // Function @ pipeline.h:60:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/modules/pipeline.h)
    [DllImport(LibraryName)]
    public static extern ecs_entity_t ecs_get_pipeline(ecs_world_t* world);

    // Function @ pipeline.h:49:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/modules/pipeline.h)
    [DllImport(LibraryName)]
    public static extern void ecs_set_pipeline(ecs_world_t* world, ecs_entity_t pipeline);

    // Function @ system.h:321:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/modules/system.h)
    [DllImport(LibraryName)]
    public static extern void FlecsSystemImport(ecs_world_t* world);

    // Function @ system.h:304:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/modules/system.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_dbg_match_entity(ecs_world_t* world, ecs_entity_t entity, ecs_entity_t system, ecs_match_failure_t* failure_info_out);

    // Function @ system.h:298:12 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/modules/system.h)
    [DllImport(LibraryName)]
    public static extern ecs_type_t ecs_dbg_get_column_type(ecs_world_t* world, ecs_entity_t system, int column_index);

    // Function @ system.h:292:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/modules/system.h)
    [DllImport(LibraryName)]
    public static extern ecs_table_t* ecs_dbg_get_inactive_table(ecs_world_t* world, ecs_dbg_system_t* dbg, int index);

    // Function @ system.h:286:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/modules/system.h)
    [DllImport(LibraryName)]
    public static extern ecs_table_t* ecs_dbg_get_active_table(ecs_world_t* world, ecs_dbg_system_t* dbg, int index);

    // Function @ system.h:280:5 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/modules/system.h)
    [DllImport(LibraryName)]
    public static extern int ecs_dbg_system(ecs_world_t* world, ecs_entity_t system, ecs_dbg_system_t* dbg_out);

    // Function @ system.h:262:7 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/modules/system.h)
    [DllImport(LibraryName)]
    public static extern void* ecs_get_system_ctx(ecs_world_t* world, ecs_entity_t system);

    // Function @ system.h:249:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/modules/system.h)
    [DllImport(LibraryName)]
    public static extern ecs_query_t* ecs_get_query(ecs_world_t* world, ecs_entity_t system);

    // Function @ system.h:230:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/modules/system.h)
    [DllImport(LibraryName)]
    public static extern ecs_entity_t ecs_run_w_filter(ecs_world_t* world, ecs_entity_t system, float delta_time, int offset, int limit, ecs_filter_t* filter, void* param);

    // Function @ system.h:200:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/modules/system.h)
    [DllImport(LibraryName)]
    public static extern ecs_entity_t ecs_run_worker(ecs_world_t* world, ecs_entity_t system, int stage_current, int stage_count, float delta_time, void* param);

    // Function @ system.h:183:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/modules/system.h)
    [DllImport(LibraryName)]
    public static extern ecs_entity_t ecs_run(ecs_world_t* world, ecs_entity_t system, float delta_time, void* param);

    // Function @ system.h:125:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/modules/system.h)
    [DllImport(LibraryName)]
    public static extern ecs_entity_t ecs_system_init(ecs_world_t* world, ecs_system_desc_t* desc);

    // Function @ module.h:69:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/module.h)
    [DllImport(LibraryName)]
    public static extern ecs_entity_t ecs_import_from_library(ecs_world_t* world, CString library_name, CString module_name);

    // Function @ module.h:42:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/module.h)
    [DllImport(LibraryName)]
    public static extern ecs_entity_t ecs_import(ecs_world_t* world, ecs_module_action_t module, CString module_name, void* handles_out, ulong handles_size);

    // Function @ flecs.h:3609:9 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern int ecs_table_count(ecs_table_t* table);

    // Function @ flecs.h:3593:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern ecs_record_t ecs_table_insert(ecs_world_t* world, ecs_table_t* table, ecs_entity_t entity, ecs_record_t* @record);

    // Function @ flecs.h:3567:12 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern ecs_type_t ecs_table_get_type(ecs_table_t* table);

    // Function @ flecs.h:3557:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern ecs_table_t* ecs_table_from_type(ecs_world_t* world, ecs_type_t type);

    // Function @ flecs.h:3545:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern ecs_table_t* ecs_table_from_str(ecs_world_t* world, CString type);

    // Function @ flecs.h:3523:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_stage_is_async(ecs_world_t* stage);

    // Function @ flecs.h:3513:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern void ecs_async_stage_free(ecs_world_t* stage);

    // Function @ flecs.h:3503:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern ecs_world_t* ecs_async_stage_new(ecs_world_t* world);

    // Function @ flecs.h:3481:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_stage_is_readonly(ecs_world_t* stage);

    // Function @ flecs.h:3470:20 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern ecs_world_t* ecs_get_world(ecs_world_t* world);

    // Function @ flecs.h:3461:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern ecs_world_t* ecs_get_stage(ecs_world_t* world, int stage_id);

    // Function @ flecs.h:3442:9 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern int ecs_get_stage_id(ecs_world_t* world);

    // Function @ flecs.h:3431:9 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern int ecs_get_stage_count(ecs_world_t* world);

    // Function @ flecs.h:3420:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern void ecs_set_stages(ecs_world_t* world, int stages);

    // Function @ flecs.h:3402:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern void ecs_set_automerge(ecs_world_t* world, CBool automerge);

    // Function @ flecs.h:3382:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_defer_end(ecs_world_t* world);

    // Function @ flecs.h:3370:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_defer_begin(ecs_world_t* world);

    // Function @ flecs.h:3357:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern void ecs_merge(ecs_world_t* world);

    // Function @ flecs.h:3343:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern void ecs_staging_end(ecs_world_t* world);

    // Function @ flecs.h:3330:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_staging_begin(ecs_world_t* world);

    // Function @ flecs.h:3307:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern void ecs_frame_end(ecs_world_t* world);

    // Function @ flecs.h:3296:13 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern float ecs_frame_begin(ecs_world_t* world, float delta_time);

    // Function @ flecs.h:3265:8 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern ulong ecs_iter_column_size(ecs_iter_t* it, int index);

    // Function @ flecs.h:3247:7 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern void* ecs_iter_column_w_size(ecs_iter_t* it, ulong size, int index);

    // Function @ flecs.h:3215:9 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern int ecs_iter_find_column(ecs_iter_t* it, ecs_id_t id);

    // Function @ flecs.h:3192:12 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern ecs_type_t ecs_iter_type(ecs_iter_t* it);

    // Function @ flecs.h:3180:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_term_is_owned(ecs_iter_t* it, int index);

    // Function @ flecs.h:3166:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_term_is_readonly(ecs_iter_t* it, int index);

    // Function @ flecs.h:3153:8 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern ulong ecs_term_size(ecs_iter_t* it, int index);

    // Function @ flecs.h:3141:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern ecs_entity_t ecs_term_source(ecs_iter_t* it, int index);

    // Function @ flecs.h:3123:10 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern ecs_id_t ecs_term_id(ecs_iter_t* it, int index);

    // Function @ flecs.h:3104:7 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern void* ecs_term_w_size(ecs_iter_t* it, ulong size, int index);

    // Function @ flecs.h:3068:7 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern void* ecs_get_trigger_ctx(ecs_world_t* world, ecs_entity_t trigger);

    // Function @ flecs.h:3055:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern ecs_entity_t ecs_trigger_init(ecs_world_t* world, ecs_trigger_desc_t* desc);

    // Function @ flecs.h:3030:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_query_orphaned(ecs_query_t* query);

    // Function @ flecs.h:3018:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_query_changed(ecs_query_t* query);

    // Function @ flecs.h:3002:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_query_next_worker(ecs_iter_t* it, int stage_current, int stage_count);

    // Function @ flecs.h:2982:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_query_next_w_filter(ecs_iter_t* iter, ecs_filter_t* filter);

    // Function @ flecs.h:2970:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_query_next(ecs_iter_t* iter);

    // Function @ flecs.h:2955:12 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern ecs_iter_t ecs_query_iter_page(ecs_query_t* query, int offset, int limit);

    // Function @ flecs.h:2942:12 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern ecs_iter_t ecs_query_iter(ecs_query_t* query);

    // Function @ flecs.h:2912:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern void ecs_query_fini(ecs_query_t* query);

    // Function @ flecs.h:2900:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern ecs_query_t* ecs_query_init(ecs_world_t* world, ecs_query_desc_t* desc);

    // Function @ flecs.h:2854:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_filter_next(ecs_iter_t* iter);

    // Function @ flecs.h:2840:12 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern ecs_iter_t ecs_filter_iter(ecs_world_t* world, ecs_filter_t* filter);

    // Function @ flecs.h:2825:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_filter_match_entity(ecs_world_t* world, ecs_filter_t* filter, ecs_entity_t e);

    // Function @ flecs.h:2805:7 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern CString ecs_filter_str(ecs_world_t* world, ecs_filter_t* filter);

    // Function @ flecs.h:2796:5 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern int ecs_filter_finalize(ecs_world_t* world, ecs_filter_t* filter);

    // Function @ flecs.h:2779:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern void ecs_filter_fini(ecs_filter_t* filter);

    // Function @ flecs.h:2768:5 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern int ecs_filter_init(ecs_world_t* world, ecs_filter_t* filter_out, ecs_filter_desc_t* desc);

    // Function @ flecs.h:2735:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_id_match(ecs_id_t id, ecs_id_t pattern);

    // Function @ flecs.h:2724:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern void ecs_term_fini(ecs_term_t* term);

    // Function @ flecs.h:2714:12 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern ecs_term_t ecs_term_move(ecs_term_t* src);

    // Function @ flecs.h:2700:12 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern ecs_term_t ecs_term_copy(ecs_term_t* src);

    // Function @ flecs.h:2685:5 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern int ecs_term_finalize(ecs_world_t* world, CString name, CString expr, ecs_term_t* term);

    // Function @ flecs.h:2661:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_term_is_trivial(ecs_term_t* term);

    // Function @ flecs.h:2634:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_term_is_set(ecs_term_t* term);

    // Function @ flecs.h:2610:13 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern CString ecs_set_name_prefix(ecs_world_t* world, CString prefix);

    // Function @ flecs.h:2597:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern ecs_entity_t ecs_get_scope(ecs_world_t* world);

    // Function @ flecs.h:2585:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern ecs_entity_t ecs_set_scope(ecs_world_t* world, ecs_entity_t scope);

    // Function @ flecs.h:2570:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_scope_next(ecs_iter_t* it);

    // Function @ flecs.h:2556:12 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern ecs_iter_t ecs_scope_iter_w_filter(ecs_world_t* world, ecs_entity_t parent, ecs_filter_t* filter);

    // Function @ flecs.h:2544:12 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern ecs_iter_t ecs_scope_iter(ecs_world_t* world, ecs_entity_t parent);

    // Function @ flecs.h:2531:9 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern int ecs_get_child_count(ecs_world_t* world, ecs_entity_t entity);

    // Function @ flecs.h:2484:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern ecs_entity_t ecs_add_path_w_sep(ecs_world_t* world, ecs_entity_t entity, ecs_entity_t parent, CString path, CString sep, CString prefix);

    // Function @ flecs.h:2440:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern ecs_entity_t ecs_new_from_path_w_sep(ecs_world_t* world, ecs_entity_t parent, CString path, CString sep, CString prefix);

    // Function @ flecs.h:2391:7 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern CString ecs_get_path_w_sep(ecs_world_t* world, ecs_entity_t parent, ecs_entity_t child, ecs_entity_t component, CString sep, CString prefix);

    // Function @ flecs.h:2359:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern void ecs_use(ecs_world_t* world, ecs_entity_t entity, CString name);

    // Function @ flecs.h:2353:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern ecs_entity_t ecs_lookup_symbol(ecs_world_t* world, CString name);

    // Function @ flecs.h:2312:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern ecs_entity_t ecs_lookup_path_w_sep(ecs_world_t* world, ecs_entity_t parent, CString path, CString sep, CString prefix, CBool recursive);

    // Function @ flecs.h:2288:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern ecs_entity_t ecs_lookup_child(ecs_world_t* world, ecs_entity_t parent, CString name);

    // Function @ flecs.h:2274:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern ecs_entity_t ecs_lookup(ecs_world_t* world, CString name);

    // Function @ flecs.h:2253:9 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern int ecs_count_filter(ecs_world_t* world, ecs_filter_t* filter);

    // Function @ flecs.h:2231:9 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern int ecs_count_id(ecs_world_t* world, ecs_id_t entity);

    // Function @ flecs.h:2218:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern void ecs_enable(ecs_world_t* world, ecs_entity_t entity, CBool enabled);

    // Function @ flecs.h:2189:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern ecs_entity_t ecs_get_object_w_id(ecs_world_t* world, ecs_entity_t entity, ecs_entity_t rel, ecs_id_t id);

    // Function @ flecs.h:2171:8 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern ulong ecs_id_str(ecs_world_t* world, ecs_id_t entity, CString buffer, ulong buffer_len);

    // Function @ flecs.h:2158:13 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern CString ecs_role_str(ecs_entity_t entity);

    // Function @ flecs.h:2146:13 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern CString ecs_get_name(ecs_world_t* world, ecs_entity_t entity);

    // Function @ flecs.h:2134:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern ecs_entity_t ecs_get_typeid(ecs_world_t* world, ecs_entity_t e);

    // Function @ flecs.h:2123:12 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern ecs_type_t ecs_get_type(ecs_world_t* world, ecs_entity_t entity);

    // Function @ flecs.h:2112:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_exists(ecs_world_t* world, ecs_entity_t e);

    // Function @ flecs.h:2100:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern void ecs_ensure(ecs_world_t* world, ecs_entity_t e);

    // Function @ flecs.h:2072:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern ecs_entity_t ecs_get_alive(ecs_world_t* world, ecs_entity_t e);

    // Function @ flecs.h:2051:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_is_alive(ecs_world_t* world, ecs_entity_t e);

    // Function @ flecs.h:2040:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_is_valid(ecs_world_t* world, ecs_entity_t e);

    // Function @ flecs.h:1989:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_has_id(ecs_world_t* world, ecs_entity_t entity, ecs_id_t id);

    // Function @ flecs.h:1914:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern ecs_entity_t ecs_set_id(ecs_world_t* world, ecs_entity_t entity, ecs_id_t id, ulong size, void* ptr);

    // Function @ flecs.h:1885:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern void ecs_modified_w_id(ecs_world_t* world, ecs_entity_t entity, ecs_id_t id);

    // Function @ flecs.h:1856:7 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern void* ecs_get_mut_w_id(ecs_world_t* world, ecs_entity_t entity, ecs_id_t id, CBool* is_added);

    // Function @ flecs.h:1828:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern ecs_entity_t ecs_get_case(ecs_world_t* world, ecs_entity_t e, ecs_entity_t sw);

    // Function @ flecs.h:1800:13 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern void* ecs_get_ref_w_id(ecs_world_t* world, ecs_ref_t* @ref, ecs_entity_t entity, ecs_id_t id);

    // Function @ flecs.h:1770:13 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern void* ecs_get_id(ecs_world_t* world, ecs_entity_t entity, ecs_id_t id);

    // Function @ flecs.h:1748:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern void ecs_delete_children(ecs_world_t* world, ecs_entity_t parent);

    // Function @ flecs.h:1735:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern void ecs_delete(ecs_world_t* world, ecs_entity_t entity);

    // Function @ flecs.h:1721:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern void ecs_clear(ecs_world_t* world, ecs_entity_t entity);

    // Function @ flecs.h:1522:10 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern ecs_id_t ecs_make_pair(ecs_entity_t relation, ecs_entity_t @object);

    // Function @ flecs.h:1498:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_is_component_enabled_w_id(ecs_world_t* world, ecs_entity_t entity, ecs_id_t id);

    // Function @ flecs.h:1478:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern void ecs_enable_component_w_id(ecs_world_t* world, ecs_entity_t entity, ecs_id_t id, CBool enable);

    // Function @ flecs.h:1434:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern void ecs_remove_id(ecs_world_t* world, ecs_entity_t entity, ecs_id_t id);

    // Function @ flecs.h:1402:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern void ecs_add_id(ecs_world_t* world, ecs_entity_t entity, ecs_id_t id);

    // Function @ flecs.h:1379:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern ecs_entity_t ecs_clone(ecs_world_t* world, ecs_entity_t dst, ecs_entity_t src, CBool copy_value);

    // Function @ flecs.h:1347:21 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern ecs_entity_t* ecs_bulk_new_w_data(ecs_world_t* world, int count, ecs_entities_t* component_ids, void* data);

    // Function @ flecs.h:1329:21 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern ecs_entity_t* ecs_bulk_new_w_id(ecs_world_t* world, ecs_id_t id, int count);

    // Function @ flecs.h:1315:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern ecs_entity_t ecs_type_init(ecs_world_t* world, ecs_type_desc_t* desc);

    // Function @ flecs.h:1292:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern ecs_entity_t ecs_component_init(ecs_world_t* world, ecs_component_desc_t* desc);

    // Function @ flecs.h:1274:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern ecs_entity_t ecs_entity_init(ecs_world_t* world, ecs_entity_desc_t* desc);

    // Function @ flecs.h:1238:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern ecs_entity_t ecs_new_w_id(ecs_world_t* world, ecs_id_t id);

    // Function @ flecs.h:1226:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern ecs_entity_t ecs_new_component_id(ecs_world_t* world);

    // Function @ flecs.h:1213:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern ecs_entity_t ecs_new_id(ecs_world_t* world);

    // Function @ flecs.h:1196:9 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern int ecs_get_threads(ecs_world_t* world);

    // Function @ flecs.h:1190:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern void ecs_set_target_fps(ecs_world_t* world, float fps);

    // Function @ flecs.h:1170:16 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern void ecs_measure_system_time(ecs_world_t* world, CBool enable);

    // Function @ flecs.h:1156:16 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern void ecs_measure_frame_time(ecs_world_t* world, CBool enable);

    // Function @ flecs.h:1142:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern void ecs_tracing_enable(int level);

    // Function @ flecs.h:1121:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern void ecs_end_wait(ecs_world_t* world);

    // Function @ flecs.h:1111:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern void ecs_begin_wait(ecs_world_t* world);

    // Function @ flecs.h:1097:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern void ecs_unlock(ecs_world_t* world);

    // Function @ flecs.h:1088:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern void ecs_lock(ecs_world_t* world);

    // Function @ flecs.h:1078:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_enable_locking(ecs_world_t* world, CBool enable);

    // Function @ flecs.h:1057:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_enable_range_check(ecs_world_t* world, CBool enable);

    // Function @ flecs.h:1041:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern void ecs_set_entity_range(ecs_world_t* world, ecs_entity_t id_start, ecs_entity_t id_end);

    // Function @ flecs.h:1021:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern void ecs_dim(ecs_world_t* world, int entity_count);

    // Function @ flecs.h:1008:25 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern ecs_world_info_t* ecs_get_world_info(ecs_world_t* world);

    // Function @ flecs.h:998:7 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern void* ecs_get_context(ecs_world_t* world);

    // Function @ flecs.h:986:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern void ecs_set_context(ecs_world_t* world, void* ctx);

    // Function @ flecs.h:968:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern void ecs_set_component_actions_w_id(ecs_world_t* world, ecs_id_t id, EcsComponentLifecycle* actions);

    // Function @ flecs.h:958:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_should_quit(ecs_world_t* world);

    // Function @ flecs.h:950:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern void ecs_quit(ecs_world_t* world);

    // Function @ flecs.h:938:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern void ecs_run_post_frame(ecs_world_t* world, ecs_fini_action_t action, void* ctx);

    // Function @ flecs.h:925:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern void ecs_atfini(ecs_world_t* world, ecs_fini_action_t action, void* ctx);

    // Function @ flecs.h:914:5 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern int ecs_fini(ecs_world_t* world);

    // Function @ flecs.h:903:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern ecs_world_t* ecs_init_w_args(int argc, CString* argv);

    // Function @ flecs.h:893:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern ecs_world_t* ecs_mini();

    // Function @ flecs.h:886:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [DllImport(LibraryName)]
    public static extern ecs_world_t* ecs_init();

    // Function @ deprecated.h:550:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/deprecated.h)
    [DllImport(LibraryName)]
    public static extern void ecs_query_group_by(ecs_world_t* world, ecs_query_t* query, ecs_entity_t component, ecs_rank_type_action_t rank_action);

    // Function @ deprecated.h:542:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/deprecated.h)
    [DllImport(LibraryName)]
    public static extern void ecs_query_order_by(ecs_world_t* world, ecs_query_t* query, ecs_entity_t component, ecs_compare_action_t compare);

    // Function @ deprecated.h:537:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/deprecated.h)
    [DllImport(LibraryName)]
    public static extern void ecs_query_free(ecs_query_t* query);

    // Function @ deprecated.h:530:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/deprecated.h)
    [DllImport(LibraryName)]
    public static extern ecs_query_t* ecs_subquery_new(ecs_world_t* world, ecs_query_t* parent, CString sig);

    // Function @ deprecated.h:524:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/deprecated.h)
    [DllImport(LibraryName)]
    public static extern ecs_query_t* ecs_query_new(ecs_world_t* world, CString sig);

    // Function @ deprecated.h:516:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/deprecated.h)
    [DllImport(LibraryName)]
    public static extern ecs_entity_t ecs_set_rate_filter(ecs_world_t* world, ecs_entity_t filter, int rate, ecs_entity_t source);

    // Function @ deprecated.h:510:9 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/deprecated.h)
    [DllImport(LibraryName)]
    public static extern int ecs_table_component_index(ecs_iter_t* it, ecs_entity_t component);

    // Function @ deprecated.h:504:8 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/deprecated.h)
    [DllImport(LibraryName)]
    public static extern ulong ecs_table_column_size(ecs_iter_t* it, int column);

    // Function @ deprecated.h:498:7 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/deprecated.h)
    [DllImport(LibraryName)]
    public static extern void* ecs_table_column(ecs_iter_t* it, int column);

    // Function @ deprecated.h:492:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/deprecated.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_is_owned(ecs_iter_t* it, int column);

    // Function @ deprecated.h:486:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/deprecated.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_is_readonly(ecs_iter_t* it, int column);

    // Function @ deprecated.h:480:8 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/deprecated.h)
    [DllImport(LibraryName)]
    public static extern ulong ecs_column_size(ecs_iter_t* it, int column);

    // Function @ deprecated.h:474:12 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/deprecated.h)
    [DllImport(LibraryName)]
    public static extern ecs_type_t ecs_column_type(ecs_iter_t* it, int column);

    // Function @ deprecated.h:468:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/deprecated.h)
    [DllImport(LibraryName)]
    public static extern ecs_entity_t ecs_column_entity(ecs_iter_t* it, int column);

    // Function @ deprecated.h:462:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/deprecated.h)
    [DllImport(LibraryName)]
    public static extern ecs_entity_t ecs_column_source(ecs_iter_t* it, int column);

    // Function @ deprecated.h:451:7 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/deprecated.h)
    [DllImport(LibraryName)]
    public static extern void* ecs_element_w_size(ecs_iter_t* it, ulong size, int column, int row);

    // Function @ deprecated.h:445:9 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/deprecated.h)
    [DllImport(LibraryName)]
    public static extern int ecs_column_index_from_name(ecs_iter_t* it, CString name);

    // Function @ deprecated.h:435:7 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/deprecated.h)
    [DllImport(LibraryName)]
    public static extern void* ecs_column_w_size(ecs_iter_t* it, ulong size, int column);

    // Function @ deprecated.h:427:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/deprecated.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_type_owns_entity(ecs_world_t* world, ecs_type_t type, ecs_entity_t entity, CBool owned);

    // Function @ deprecated.h:420:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/deprecated.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_type_has_entity(ecs_world_t* world, ecs_type_t type, ecs_entity_t entity);

    // Function @ deprecated.h:414:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/deprecated.h)
    [DllImport(LibraryName)]
    public static extern ecs_entity_t ecs_type_to_entity(ecs_world_t* world, ecs_type_t type);

    // Function @ deprecated.h:408:12 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/deprecated.h)
    [DllImport(LibraryName)]
    public static extern ecs_type_t ecs_type_from_entity(ecs_world_t* world, ecs_entity_t entity);

    // Function @ deprecated.h:400:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/deprecated.h)
    [DllImport(LibraryName)]
    public static extern void ecs_add_remove_entity(ecs_world_t* world, ecs_entity_t entity, ecs_id_t id_add, ecs_id_t id_remove);

    // Function @ deprecated.h:393:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/deprecated.h)
    [DllImport(LibraryName)]
    public static extern void ecs_remove_entity(ecs_world_t* world, ecs_entity_t entity, ecs_id_t id);

    // Function @ deprecated.h:386:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/deprecated.h)
    [DllImport(LibraryName)]
    public static extern void ecs_add_entity(ecs_world_t* world, ecs_entity_t entity, ecs_entity_t entity_add);

    // Function @ deprecated.h:381:9 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/deprecated.h)
    [DllImport(LibraryName)]
    public static extern int ecs_get_thread_index(ecs_world_t* world);

    // Function @ deprecated.h:371:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/deprecated.h)
    [DllImport(LibraryName)]
    public static extern ecs_entity_t ecs_get_parent_w_entity(ecs_world_t* world, ecs_entity_t entity, ecs_id_t id);

    // Function @ deprecated.h:363:8 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/deprecated.h)
    [DllImport(LibraryName)]
    public static extern ulong ecs_entity_str(ecs_world_t* world, ecs_id_t entity, CString buffer, ulong buffer_len);

    // Function @ deprecated.h:356:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/deprecated.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_has_entity(ecs_world_t* world, ecs_entity_t entity, ecs_id_t id);

    // Function @ deprecated.h:347:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/deprecated.h)
    [DllImport(LibraryName)]
    public static extern ecs_entity_t ecs_set_ptr_w_entity(ecs_world_t* world, ecs_entity_t entity, ecs_id_t id, ulong size, void* ptr);

    // Function @ deprecated.h:340:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/deprecated.h)
    [DllImport(LibraryName)]
    public static extern void ecs_modified_w_entity(ecs_world_t* world, ecs_entity_t entity, ecs_id_t id);

    // Function @ deprecated.h:332:7 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/deprecated.h)
    [DllImport(LibraryName)]
    public static extern void* ecs_get_mut_w_entity(ecs_world_t* world, ecs_entity_t entity, ecs_id_t id, CBool* is_added);

    // Function @ deprecated.h:324:13 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/deprecated.h)
    [DllImport(LibraryName)]
    public static extern void* ecs_get_ref_w_entity(ecs_world_t* world, ecs_ref_t* @ref, ecs_entity_t entity, ecs_id_t id);

    // Function @ deprecated.h:317:13 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/deprecated.h)
    [DllImport(LibraryName)]
    public static extern void* ecs_get_w_entity(ecs_world_t* world, ecs_entity_t entity, ecs_id_t id);

    // Function @ deprecated.h:310:13 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/deprecated.h)
    [DllImport(LibraryName)]
    public static extern void* ecs_get_w_id(ecs_world_t* world, ecs_entity_t entity, ecs_id_t id);

    // Function @ deprecated.h:303:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/deprecated.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_is_component_enabled_w_entity(ecs_world_t* world, ecs_entity_t entity, ecs_id_t id);

    // Function @ deprecated.h:295:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/deprecated.h)
    [DllImport(LibraryName)]
    public static extern void ecs_enable_component_w_entity(ecs_world_t* world, ecs_entity_t entity, ecs_id_t id, CBool enable);

    // Function @ deprecated.h:288:21 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/deprecated.h)
    [DllImport(LibraryName)]
    public static extern ecs_entity_t* ecs_bulk_new_w_entity(ecs_world_t* world, ecs_id_t id, int count);

    // Function @ deprecated.h:282:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/deprecated.h)
    [DllImport(LibraryName)]
    public static extern ecs_entity_t ecs_new_w_entity(ecs_world_t* world, ecs_id_t id);

    // Function @ deprecated.h:275:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/deprecated.h)
    [DllImport(LibraryName)]
    public static extern void ecs_set_component_actions_w_entity(ecs_world_t* world, ecs_id_t id, EcsComponentLifecycle* actions);

    // Function @ deprecated.h:269:9 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/deprecated.h)
    [DllImport(LibraryName)]
    public static extern int ecs_count_w_filter(ecs_world_t* world, ecs_filter_t* filter);

    // Function @ deprecated.h:263:9 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/deprecated.h)
    [DllImport(LibraryName)]
    public static extern int ecs_count_entity(ecs_world_t* world, ecs_id_t entity);

    // Function @ deprecated.h:257:9 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/deprecated.h)
    [DllImport(LibraryName)]
    public static extern int ecs_count_type(ecs_world_t* world, ecs_type_t type);

    // Function @ deprecated.h:250:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/deprecated.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_has_type(ecs_world_t* world, ecs_entity_t entity, ecs_type_t type);

    // Function @ deprecated.h:242:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/deprecated.h)
    [DllImport(LibraryName)]
    public static extern void ecs_add_remove_type(ecs_world_t* world, ecs_entity_t entity, ecs_type_t to_add, ecs_type_t to_remove);

    // Function @ deprecated.h:235:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/deprecated.h)
    [DllImport(LibraryName)]
    public static extern void ecs_remove_type(ecs_world_t* world, ecs_entity_t entity, ecs_type_t type);

    // Function @ deprecated.h:228:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/deprecated.h)
    [DllImport(LibraryName)]
    public static extern void ecs_add_type(ecs_world_t* world, ecs_entity_t entity, ecs_type_t type);

    // Function @ deprecated.h:221:21 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/deprecated.h)
    [DllImport(LibraryName)]
    public static extern ecs_entity_t* ecs_bulk_new_w_type(ecs_world_t* world, ecs_type_t type, int count);

    // Function @ deprecated.h:215:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/deprecated.h)
    [DllImport(LibraryName)]
    public static extern ecs_entity_t ecs_new_w_type(ecs_world_t* world, ecs_type_t type);

    // Function @ deprecated.h:208:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/deprecated.h)
    [DllImport(LibraryName)]
    public static extern void ecs_dim_type(ecs_world_t* world, ecs_type_t type, int entity_count);

    // Function @ type.h:109:9 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/type.h)
    [DllImport(LibraryName)]
    public static extern int ecs_type_match(ecs_type_t type, int start_index, ecs_entity_t pair);

    // Function @ type.h:104:9 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/type.h)
    [DllImport(LibraryName)]
    public static extern int ecs_type_index_of(ecs_type_t type, ecs_entity_t component);

    // Function @ type.h:98:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/type.h)
    [DllImport(LibraryName)]
    public static extern ecs_entity_t ecs_type_get_entity_for_xor(ecs_world_t* world, ecs_type_t type, ecs_entity_t xor_tag);

    // Function @ type.h:88:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/type.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_type_find_id(ecs_world_t* world, ecs_type_t type, ecs_entity_t id, ecs_entity_t rel, int min_depth, int max_depth, ecs_entity_t* @out);

    // Function @ type.h:81:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/type.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_type_owns_type(ecs_world_t* world, ecs_type_t type, ecs_type_t has, CBool owned);

    // Function @ type.h:74:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/type.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_type_owns_id(ecs_world_t* world, ecs_type_t type, ecs_entity_t entity, CBool owned);

    // Function @ type.h:68:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/type.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_type_has_type(ecs_world_t* world, ecs_type_t type, ecs_type_t has);

    // Function @ type.h:62:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/type.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_type_has_id(ecs_world_t* world, ecs_type_t type, ecs_entity_t entity);

    // Function @ type.h:56:12 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/type.h)
    [DllImport(LibraryName)]
    public static extern ecs_type_t ecs_type_remove(ecs_world_t* world, ecs_type_t type, ecs_entity_t entity);

    // Function @ type.h:50:12 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/type.h)
    [DllImport(LibraryName)]
    public static extern ecs_type_t ecs_type_add(ecs_world_t* world, ecs_type_t type, ecs_entity_t entity);

    // Function @ type.h:43:12 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/type.h)
    [DllImport(LibraryName)]
    public static extern ecs_type_t ecs_type_merge(ecs_world_t* world, ecs_type_t type, ecs_type_t type_add, ecs_type_t type_remove);

    // Function @ type.h:37:12 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/type.h)
    [DllImport(LibraryName)]
    public static extern ecs_type_t ecs_type_find(ecs_world_t* world, ecs_entity_t* array, int count);

    // Function @ type.h:32:12 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/type.h)
    [DllImport(LibraryName)]
    public static extern ecs_type_t ecs_type_from_str(ecs_world_t* world, CString expr);

    // Function @ type.h:27:7 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/type.h)
    [DllImport(LibraryName)]
    public static extern CString ecs_type_str(ecs_world_t* world, ecs_type_t type);

    // Function @ type.h:22:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/type.h)
    [DllImport(LibraryName)]
    public static extern ecs_entity_t ecs_type_to_id(ecs_world_t* world, ecs_type_t type);

    // Function @ type.h:17:12 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/type.h)
    [DllImport(LibraryName)]
    public static extern ecs_type_t ecs_type_from_id(ecs_world_t* world, ecs_entity_t entity);

    // Function @ log.h:158:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/log.h)
    [DllImport(LibraryName)]
    public static extern void _ecs_parser_error(CString name, CString expr, long column, CString fmt);

    // Function @ log.h:141:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/log.h)
    [DllImport(LibraryName)]
    public static extern void _ecs_assert(CBool condition, int error_code, CString param, CString condition_str, CString file, int line);

    // Function @ log.h:130:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/log.h)
    [DllImport(LibraryName)]
    public static extern void _ecs_abort(int error_code, CString param, CString file, int line);

    // Function @ log.h:125:13 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/log.h)
    [DllImport(LibraryName)]
    public static extern CString ecs_strerror(int error_code);

    // Function @ log.h:71:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/log.h)
    [DllImport(LibraryName)]
    public static extern void ecs_log_pop();

    // Function @ log.h:68:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/log.h)
    [DllImport(LibraryName)]
    public static extern void ecs_log_push();

    // Function @ log.h:62:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/log.h)
    [DllImport(LibraryName)]
    public static extern void _ecs_deprecated(CString file, int line, CString msg);

    // Function @ log.h:55:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/log.h)
    [DllImport(LibraryName)]
    public static extern void _ecs_err(CString file, int line, CString fmt);

    // Function @ log.h:48:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/log.h)
    [DllImport(LibraryName)]
    public static extern void _ecs_warn(CString file, int line, CString fmt);

    // Function @ log.h:40:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/log.h)
    [DllImport(LibraryName)]
    public static extern void _ecs_trace(int level, CString file, int line, CString fmt);

    // Function @ api_support.h:80:15 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/api_support.h)
    [DllImport(LibraryName)]
    public static extern ecs_filter_t* ecs_query_get_filter(ecs_query_t* query);

    // Function @ api_support.h:75:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/api_support.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_identifier_is_var(CString id);

    // Function @ api_support.h:72:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/api_support.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_identifier_is_0(CString id);

    // Function @ api_support.h:64:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/api_support.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_component_has_actions(ecs_world_t* world, ecs_entity_t component);

    // Function @ api_support.h:60:7 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/api_support.h)
    [DllImport(LibraryName)]
    public static extern CString ecs_module_path_from_c(CString c_name);

    // Function @ api_support.h:52:14 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/api_support.h)
    [DllImport(LibraryName)]
    public static extern ecs_entity_t ecs_new_module(ecs_world_t* world, ecs_entity_t e, CString name, ulong size, ulong alignment);

    // Function @ os_api.h:431:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/os_api.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_os_has_modules();

    // Function @ os_api.h:427:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/os_api.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_os_has_dl();

    // Function @ os_api.h:423:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/os_api.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_os_has_logging();

    // Function @ os_api.h:419:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/os_api.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_os_has_time();

    // Function @ os_api.h:415:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/os_api.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_os_has_threading();

    // Function @ os_api.h:411:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/os_api.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_os_has_heap();

    // Function @ os_api.h:405:7 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/os_api.h)
    [DllImport(LibraryName)]
    public static extern void* ecs_os_memdup(void* src, ecs_size_t size);

    // Function @ os_api.h:401:8 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/os_api.h)
    [DllImport(LibraryName)]
    public static extern double ecs_time_to_double(ecs_time_t t);

    // Function @ os_api.h:395:12 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/os_api.h)
    [DllImport(LibraryName)]
    public static extern ecs_time_t ecs_time_sub(ecs_time_t t1, ecs_time_t t2);

    // Function @ os_api.h:390:8 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/os_api.h)
    [DllImport(LibraryName)]
    public static extern double ecs_time_measure(ecs_time_t* start);

    // Function @ os_api.h:385:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/os_api.h)
    [DllImport(LibraryName)]
    public static extern void ecs_sleepf(double t);

    // Function @ os_api.h:369:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/os_api.h)
    [DllImport(LibraryName)]
    public static extern void ecs_os_dbg(CString fmt);

    // Function @ os_api.h:366:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/os_api.h)
    [DllImport(LibraryName)]
    public static extern void ecs_os_err(CString fmt);

    // Function @ os_api.h:363:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/os_api.h)
    [DllImport(LibraryName)]
    public static extern void ecs_os_warn(CString fmt);

    // Function @ os_api.h:360:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/os_api.h)
    [DllImport(LibraryName)]
    public static extern void ecs_os_log(CString fmt);

    // Function @ os_api.h:267:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/os_api.h)
    [DllImport(LibraryName)]
    public static extern void ecs_os_set_api_defaults();

    // Function @ os_api.h:263:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/os_api.h)
    [DllImport(LibraryName)]
    public static extern void ecs_os_set_api(ecs_os_api_t* os_api);

    // Function @ os_api.h:260:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/os_api.h)
    [DllImport(LibraryName)]
    public static extern void ecs_os_fini();

    // Function @ os_api.h:257:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/os_api.h)
    [DllImport(LibraryName)]
    public static extern void ecs_os_init();

    // Function @ strbuf.h:166:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/strbuf.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_strbuf_list_appendstr(ecs_strbuf_t* buffer, CString str);

    // Function @ strbuf.h:159:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/strbuf.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_strbuf_list_append(ecs_strbuf_t* buffer, CString fmt);

    // Function @ strbuf.h:154:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/strbuf.h)
    [DllImport(LibraryName)]
    public static extern void ecs_strbuf_list_next(ecs_strbuf_t* buffer);

    // Function @ strbuf.h:148:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/strbuf.h)
    [DllImport(LibraryName)]
    public static extern void ecs_strbuf_list_pop(ecs_strbuf_t* buffer, CString list_close);

    // Function @ strbuf.h:141:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/strbuf.h)
    [DllImport(LibraryName)]
    public static extern void ecs_strbuf_list_push(ecs_strbuf_t* buffer, CString list_open, CString separator);

    // Function @ strbuf.h:136:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/strbuf.h)
    [DllImport(LibraryName)]
    public static extern void ecs_strbuf_reset(ecs_strbuf_t* buffer);

    // Function @ strbuf.h:131:7 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/strbuf.h)
    [DllImport(LibraryName)]
    public static extern CString ecs_strbuf_get(ecs_strbuf_t* buffer);

    // Function @ strbuf.h:124:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/strbuf.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_strbuf_appendstrn(ecs_strbuf_t* buffer, CString str, int n);

    // Function @ strbuf.h:117:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/strbuf.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_strbuf_appendstr_zerocpy_const(ecs_strbuf_t* buffer, CString str);

    // Function @ strbuf.h:110:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/strbuf.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_strbuf_appendstr_zerocpy(ecs_strbuf_t* buffer, CString str);

    // Function @ strbuf.h:103:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/strbuf.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_strbuf_mergebuff(ecs_strbuf_t* dst_buffer, ecs_strbuf_t* src_buffer);

    // Function @ strbuf.h:96:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/strbuf.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_strbuf_appendstr(ecs_strbuf_t* buffer, CString str);

    // Function @ strbuf.h:88:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/strbuf.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_strbuf_vappend(ecs_strbuf_t* buffer, CString fmt, IntPtr args);

    // Function @ strbuf.h:80:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/strbuf.h)
    [DllImport(LibraryName)]
    public static extern CBool ecs_strbuf_append(ecs_strbuf_t* buffer, CString fmt);

    // Function @ map.h:165:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/map.h)
    [DllImport(LibraryName)]
    public static extern void ecs_map_memory(ecs_map_t* map, int* allocd, int* used);

    // Function @ map.h:159:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/map.h)
    [DllImport(LibraryName)]
    public static extern void ecs_map_set_size(ecs_map_t* map, int elem_count);

    // Function @ map.h:153:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/map.h)
    [DllImport(LibraryName)]
    public static extern void ecs_map_grow(ecs_map_t* map, int elem_count);

    // Function @ map.h:144:7 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/map.h)
    [DllImport(LibraryName)]
    public static extern void* _ecs_map_next_ptr(ecs_map_iter_t* iter, ecs_map_key_t* key);

    // Function @ map.h:134:7 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/map.h)
    [DllImport(LibraryName)]
    public static extern void* _ecs_map_next(ecs_map_iter_t* iter, ecs_size_t elem_size, ecs_map_key_t* key);

    // Function @ map.h:129:16 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/map.h)
    [DllImport(LibraryName)]
    public static extern ecs_map_iter_t ecs_map_iter(ecs_map_t* map);

    // Function @ map.h:124:9 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/map.h)
    [DllImport(LibraryName)]
    public static extern int ecs_map_bucket_count(ecs_map_t* map);

    // Function @ map.h:119:9 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/map.h)
    [DllImport(LibraryName)]
    public static extern int ecs_map_count(ecs_map_t* map);

    // Function @ map.h:114:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/map.h)
    [DllImport(LibraryName)]
    public static extern void ecs_map_clear(ecs_map_t* map);

    // Function @ map.h:108:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/map.h)
    [DllImport(LibraryName)]
    public static extern void ecs_map_remove(ecs_map_t* map, ecs_map_key_t key);

    // Function @ map.h:103:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/map.h)
    [DllImport(LibraryName)]
    public static extern void ecs_map_free(ecs_map_t* map);

    // Function @ map.h:92:7 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/map.h)
    [DllImport(LibraryName)]
    public static extern void* _ecs_map_set(ecs_map_t* map, ecs_size_t elem_size, ecs_map_key_t key, void* payload);

    // Function @ map.h:82:8 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/map.h)
    [DllImport(LibraryName)]
    public static extern void* _ecs_map_ensure(ecs_map_t* map, ecs_size_t elem_size, ecs_map_key_t key);

    // Function @ map.h:73:8 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/map.h)
    [DllImport(LibraryName)]
    public static extern void* _ecs_map_get_ptr(ecs_map_t* map, ecs_map_key_t key);

    // Function @ map.h:60:8 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/map.h)
    [DllImport(LibraryName)]
    public static extern void* _ecs_map_get(ecs_map_t* map, ecs_size_t elem_size, ecs_map_key_t key);

    // Function @ map.h:50:13 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/map.h)
    [DllImport(LibraryName)]
    public static extern ecs_map_t* _ecs_map_new(ecs_size_t elem_size, ecs_size_t alignment, int elem_count);

    // Function @ vector.h:370:15 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/vector.h)
    [DllImport(LibraryName)]
    public static extern ecs_vector_t* _ecs_vector_copy(ecs_vector_t* src, ecs_size_t elem_size, short offset);

    // Function @ vector.h:355:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/vector.h)
    [DllImport(LibraryName)]
    public static extern void _ecs_vector_memory(ecs_vector_t* vector, ecs_size_t elem_size, short offset, int* allocd, int* used);

    // Function @ vector.h:344:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/vector.h)
    [DllImport(LibraryName)]
    public static extern void _ecs_vector_sort(ecs_vector_t* vector, ecs_size_t elem_size, short offset, ecs_comparator_t compare_action);

    // Function @ vector.h:331:7 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/vector.h)
    [DllImport(LibraryName)]
    public static extern void* _ecs_vector_first(ecs_vector_t* vector, ecs_size_t elem_size, short offset);

    // Function @ vector.h:326:9 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/vector.h)
    [DllImport(LibraryName)]
    public static extern int ecs_vector_size(ecs_vector_t* vector);

    // Function @ vector.h:321:9 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/vector.h)
    [DllImport(LibraryName)]
    public static extern int ecs_vector_count(ecs_vector_t* vector);

    // Function @ vector.h:307:9 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/vector.h)
    [DllImport(LibraryName)]
    public static extern int _ecs_vector_set_count(ecs_vector_t** vector, ecs_size_t elem_size, short offset, int elem_count);

    // Function @ vector.h:292:9 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/vector.h)
    [DllImport(LibraryName)]
    public static extern int _ecs_vector_set_size(ecs_vector_t** vector, ecs_size_t elem_size, short offset, int elem_count);

    // Function @ vector.h:281:9 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/vector.h)
    [DllImport(LibraryName)]
    public static extern int _ecs_vector_grow(ecs_vector_t** vector, ecs_size_t elem_size, short offset, int elem_count);

    // Function @ vector.h:271:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/vector.h)
    [DllImport(LibraryName)]
    public static extern void _ecs_vector_reclaim(ecs_vector_t** vector, ecs_size_t elem_size, short offset);

    // Function @ vector.h:257:9 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/vector.h)
    [DllImport(LibraryName)]
    public static extern int _ecs_vector_remove_index(ecs_vector_t* vector, ecs_size_t elem_size, short offset, int index);

    // Function @ vector.h:245:9 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/vector.h)
    [DllImport(LibraryName)]
    public static extern int _ecs_vector_move_index(ecs_vector_t** dst, ecs_vector_t* src, ecs_size_t elem_size, short offset, int index);

    // Function @ vector.h:234:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/vector.h)
    [DllImport(LibraryName)]
    public static extern CBool _ecs_vector_pop(ecs_vector_t* vector, ecs_size_t elem_size, short offset, void* value);

    // Function @ vector.h:229:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/vector.h)
    [DllImport(LibraryName)]
    public static extern void ecs_vector_remove_last(ecs_vector_t* vector);

    // Function @ vector.h:218:9 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/vector.h)
    [DllImport(LibraryName)]
    public static extern int _ecs_vector_set_min_count(ecs_vector_t** vector_inout, ecs_size_t elem_size, short offset, int elem_count);

    // Function @ vector.h:206:9 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/vector.h)
    [DllImport(LibraryName)]
    public static extern int _ecs_vector_set_min_size(ecs_vector_t** array_inout, ecs_size_t elem_size, short offset, int elem_count);

    // Function @ vector.h:195:7 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/vector.h)
    [DllImport(LibraryName)]
    public static extern void* _ecs_vector_last(ecs_vector_t* vector, ecs_size_t elem_size, short offset);

    // Function @ vector.h:181:7 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/vector.h)
    [DllImport(LibraryName)]
    public static extern void* _ecs_vector_get(ecs_vector_t* vector, ecs_size_t elem_size, short offset, int index);

    // Function @ vector.h:167:7 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/vector.h)
    [DllImport(LibraryName)]
    public static extern void* _ecs_vector_addn(ecs_vector_t** array_inout, ecs_size_t elem_size, short offset, int elem_count);

    // Function @ vector.h:154:7 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/vector.h)
    [DllImport(LibraryName)]
    public static extern void* _ecs_vector_add(ecs_vector_t** array_inout, ecs_size_t elem_size, short offset);

    // Function @ vector.h:148:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/vector.h)
    [DllImport(LibraryName)]
    public static extern void ecs_vector_assert_alignment(ecs_vector_t* vector, ecs_size_t elem_alignment);

    // Function @ vector.h:142:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/vector.h)
    [DllImport(LibraryName)]
    public static extern void ecs_vector_assert_size(ecs_vector_t* vector_inout, ecs_size_t elem_size);

    // Function @ vector.h:137:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/vector.h)
    [DllImport(LibraryName)]
    public static extern void ecs_vector_clear(ecs_vector_t* vector);

    // Function @ vector.h:132:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/vector.h)
    [DllImport(LibraryName)]
    public static extern void ecs_vector_free(ecs_vector_t* vector);

    // Function @ vector.h:122:6 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/vector.h)
    [DllImport(LibraryName)]
    public static extern void _ecs_vector_zero(ecs_vector_t* vector, ecs_size_t elem_size, short offset);

    // Function @ vector.h:111:15 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/vector.h)
    [DllImport(LibraryName)]
    public static extern ecs_vector_t* _ecs_vector_from_array(ecs_size_t elem_size, short offset, int elem_count, void* array);

    // Function @ vector.h:98:15 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/vector.h)
    [DllImport(LibraryName)]
    public static extern ecs_vector_t* _ecs_vector_new(ecs_size_t elem_size, short offset, int elem_count);

    // FunctionPointer @ flecs.h:124:16 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ecs_iter_next_action_t
    {
        public delegate* unmanaged<ecs_iter_t*, CBool> Pointer;
    }

    // FunctionPointer @ flecs.h:150:16 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ecs_ctx_free_t
    {
        public delegate* unmanaged<void*, void> Pointer;
    }

    // FunctionPointer @ system.h:77:16 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/modules/system.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ecs_system_status_action_t
    {
        public delegate* unmanaged<ecs_world_t*, ecs_entity_t, ecs_system_status_t, void*, void> Pointer;
    }

    // FunctionPointer @ flecs.h:121:16 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ecs_iter_action_t
    {
        public delegate* unmanaged<ecs_iter_t*, void> Pointer;
    }

    // FunctionPointer @ flecs.h:135:19 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ecs_rank_type_action_t
    {
        public delegate* unmanaged<ecs_world_t*, ecs_entity_t, ecs_type_t, int> Pointer;
    }

    // FunctionPointer @ flecs.h:128:15 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ecs_compare_action_t
    {
        public delegate* unmanaged<ecs_entity_t, void*, ecs_entity_t, void*, int> Pointer;
    }

    // FunctionPointer @ flecs.h:141:16 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ecs_module_action_t
    {
        public delegate* unmanaged<ecs_world_t*, void> Pointer;
    }

    // FunctionPointer @ api_types.h:231:16 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/api_types.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ecs_move_t
    {
        public delegate* unmanaged<ecs_world_t*, ecs_entity_t, ecs_entity_t*, ecs_entity_t*, void*, void*, ulong, int, void*, void> Pointer;
    }

    // FunctionPointer @ api_types.h:219:16 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/api_types.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ecs_copy_t
    {
        public delegate* unmanaged<ecs_world_t*, ecs_entity_t, ecs_entity_t*, ecs_entity_t*, void*, void*, ulong, int, void*, void> Pointer;
    }

    // FunctionPointer @ api_types.h:209:16 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/api_types.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ecs_xtor_t
    {
        public delegate* unmanaged<ecs_world_t*, ecs_entity_t, ecs_entity_t*, void*, ulong, int, void*, void> Pointer;
    }

    // FunctionPointer @ flecs.h:145:16 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ecs_fini_action_t
    {
        public delegate* unmanaged<ecs_world_t*, void*, void> Pointer;
    }

    // FunctionPointer @ os_api.h:185:9 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/os_api.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ecs_os_api_module_to_path_t
    {
        public delegate* unmanaged<CString, CString> Pointer;
    }

    // FunctionPointer @ os_api.h:181:8 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/os_api.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ecs_os_api_dlclose_t
    {
        public delegate* unmanaged<ecs_os_dl_t, void> Pointer;
    }

    // FunctionPointer @ os_api.h:176:17 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/os_api.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ecs_os_api_dlproc_t
    {
        public delegate* unmanaged<ecs_os_dl_t, CString, ecs_os_proc_t> Pointer;
    }

    // FunctionPointer @ os_api.h:58:16 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/os_api.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ecs_os_proc_t
    {
        public delegate* unmanaged<void> Pointer;
    }

    // FunctionPointer @ os_api.h:172:15 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/os_api.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ecs_os_api_dlopen_t
    {
        public delegate* unmanaged<CString, ecs_os_dl_t> Pointer;
    }

    // FunctionPointer @ os_api.h:167:8 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/os_api.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ecs_os_api_abort_t
    {
        public delegate* unmanaged<void> Pointer;
    }

    // FunctionPointer @ os_api.h:161:8 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/os_api.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ecs_os_api_log_t
    {
        public delegate* unmanaged<CString, IntPtr, void> Pointer;
    }

    // FunctionPointer @ os_api.h:156:8 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/os_api.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ecs_os_api_get_time_t
    {
        public delegate* unmanaged<ecs_time_t*, void> Pointer;
    }

    // FunctionPointer @ os_api.h:151:8 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/os_api.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ecs_os_api_sleep_t
    {
        public delegate* unmanaged<int, int, void> Pointer;
    }

    // FunctionPointer @ os_api.h:146:8 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/os_api.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ecs_os_api_cond_wait_t
    {
        public delegate* unmanaged<ecs_os_cond_t, ecs_os_mutex_t, void> Pointer;
    }

    // FunctionPointer @ os_api.h:142:8 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/os_api.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ecs_os_api_cond_broadcast_t
    {
        public delegate* unmanaged<ecs_os_cond_t, void> Pointer;
    }

    // FunctionPointer @ os_api.h:138:8 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/os_api.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ecs_os_api_cond_signal_t
    {
        public delegate* unmanaged<ecs_os_cond_t, void> Pointer;
    }

    // FunctionPointer @ os_api.h:134:8 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/os_api.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ecs_os_api_cond_free_t
    {
        public delegate* unmanaged<ecs_os_cond_t, void> Pointer;
    }

    // FunctionPointer @ os_api.h:130:17 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/os_api.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ecs_os_api_cond_new_t
    {
        public delegate* unmanaged<ecs_os_cond_t> Pointer;
    }

    // FunctionPointer @ os_api.h:117:8 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/os_api.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ecs_os_api_mutex_lock_t
    {
        public delegate* unmanaged<ecs_os_mutex_t, void> Pointer;
    }

    // FunctionPointer @ os_api.h:125:8 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/os_api.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ecs_os_api_mutex_free_t
    {
        public delegate* unmanaged<ecs_os_mutex_t, void> Pointer;
    }

    // FunctionPointer @ os_api.h:113:18 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/os_api.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ecs_os_api_mutex_new_t
    {
        public delegate* unmanaged<ecs_os_mutex_t> Pointer;
    }

    // FunctionPointer @ os_api.h:107:7 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/os_api.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ecs_os_api_ainc_t
    {
        public delegate* unmanaged<int*, int> Pointer;
    }

    // FunctionPointer @ os_api.h:101:9 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/os_api.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ecs_os_api_thread_join_t
    {
        public delegate* unmanaged<ecs_os_thread_t, void*> Pointer;
    }

    // FunctionPointer @ os_api.h:96:19 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/os_api.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ecs_os_api_thread_new_t
    {
        public delegate* unmanaged<ecs_os_thread_callback_t, void*, ecs_os_thread_t> Pointer;
    }

    // FunctionPointer @ os_api.h:92:9 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/os_api.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ecs_os_thread_callback_t
    {
        public delegate* unmanaged<void*, void*> Pointer;
    }

    // FunctionPointer @ os_api.h:87:9 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/os_api.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ecs_os_api_strdup_t
    {
        public delegate* unmanaged<CString, CString> Pointer;
    }

    // FunctionPointer @ os_api.h:74:8 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/os_api.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ecs_os_api_free_t
    {
        public delegate* unmanaged<void*, void> Pointer;
    }

    // FunctionPointer @ os_api.h:83:9 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/os_api.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ecs_os_api_calloc_t
    {
        public delegate* unmanaged<ecs_size_t, void*> Pointer;
    }

    // FunctionPointer @ os_api.h:78:9 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/os_api.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ecs_os_api_realloc_t
    {
        public delegate* unmanaged<void*, ecs_size_t, void*> Pointer;
    }

    // FunctionPointer @ os_api.h:70:9 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/os_api.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ecs_os_api_malloc_t
    {
        public delegate* unmanaged<ecs_size_t, void*> Pointer;
    }

    // FunctionPointer @ os_api.h:66:8 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/os_api.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ecs_os_api_fini_t
    {
        public delegate* unmanaged<void> Pointer;
    }

    // FunctionPointer @ os_api.h:62:8 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/os_api.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ecs_os_api_init_t
    {
        public delegate* unmanaged<void> Pointer;
    }

    // FunctionPointer @ vector.h:92:15 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/vector.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ecs_comparator_t
    {
        public delegate* unmanaged<void*, void*, int> Pointer;
    }

    // Struct @ stats.h:29:3 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/stats.h)
    [StructLayout(LayoutKind.Explicit, Size = 720, Pack = 4)]
    public struct ecs_gauge_t
    {
        [FieldOffset(0)] // size = 240, padding = 0
        public fixed uint _avg[240 / 4]; // float[60]

        public Span<float> avg
        {
            get
            {
                fixed (ecs_gauge_t* @this = &this)
                {
                    var pointer = &@this->_avg[0];
                    var span = new Span<float>(pointer, 60);
                    return span;
                }
            }
        }

        [FieldOffset(240)] // size = 240, padding = 0
        public fixed uint _min[240 / 4]; // float[60]

        public Span<float> min
        {
            get
            {
                fixed (ecs_gauge_t* @this = &this)
                {
                    var pointer = &@this->_min[0];
                    var span = new Span<float>(pointer, 60);
                    return span;
                }
            }
        }

        [FieldOffset(480)] // size = 240, padding = 0
        public fixed uint _max[240 / 4]; // float[60]

        public Span<float> max
        {
            get
            {
                fixed (ecs_gauge_t* @this = &this)
                {
                    var pointer = &@this->_max[0];
                    var span = new Span<float>(pointer, 60);
                    return span;
                }
            }
        }
    }

    // Struct @ stats.h:112:3 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/stats.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ecs_pipeline_stats_t
    {
        [FieldOffset(0)] // size = 8, padding = 0
        public ecs_vector_t* systems;

        [FieldOffset(8)] // size = 8, padding = 0
        public ecs_map_t* system_stats;
    }

    // Struct @ vector.h:90:29 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/vector.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ecs_vector_t
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int count;

        [FieldOffset(4)] // size = 4, padding = 0
        public int size;

        [FieldOffset(8)] // size = 8, padding = 0
        public long elem_size;
    }

    // Struct @ stats.h:101:3 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/stats.h)
    [StructLayout(LayoutKind.Explicit, Size = 5524, Pack = 4)]
    public struct ecs_system_stats_t
    {
        [FieldOffset(0)] // size = 2164, padding = 0
        public ecs_query_stats_t query_stats;

        [FieldOffset(2164)] // size = 960, padding = 0
        public ecs_counter_t time_spent;

        [FieldOffset(3124)] // size = 960, padding = 0
        public ecs_counter_t invoke_count;

        [FieldOffset(4084)] // size = 720, padding = 0
        public ecs_gauge_t active;

        [FieldOffset(4804)] // size = 720, padding = 0
        public ecs_gauge_t enabled;
    }

    // Struct @ stats.h:35:3 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/stats.h)
    [StructLayout(LayoutKind.Explicit, Size = 960, Pack = 4)]
    public struct ecs_counter_t
    {
        [FieldOffset(0)] // size = 720, padding = 0
        public ecs_gauge_t rate;

        [FieldOffset(720)] // size = 240, padding = 0
        public fixed uint _value[240 / 4]; // float[60]

        public Span<float> value
        {
            get
            {
                fixed (ecs_counter_t* @this = &this)
                {
                    var pointer = &@this->_value[0];
                    var span = new Span<float>(pointer, 60);
                    return span;
                }
            }
        }
    }

    // Struct @ stats.h:92:3 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/stats.h)
    [StructLayout(LayoutKind.Explicit, Size = 2164, Pack = 4)]
    public struct ecs_query_stats_t
    {
        [FieldOffset(0)] // size = 720, padding = 0
        public ecs_gauge_t matched_table_count;

        [FieldOffset(720)] // size = 720, padding = 0
        public ecs_gauge_t matched_empty_table_count;

        [FieldOffset(1440)] // size = 720, padding = 0
        public ecs_gauge_t matched_entity_count;

        [FieldOffset(2160)] // size = 4, padding = 0
        public int t;
    }

    // Struct @ stats.h:78:3 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/stats.h)
    [StructLayout(LayoutKind.Explicit, Size = 24248, Pack = 4)]
    public struct ecs_world_stats_t
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int dummy_;

        [FieldOffset(4)] // size = 720, padding = 0
        public ecs_gauge_t entity_count;

        [FieldOffset(724)] // size = 720, padding = 0
        public ecs_gauge_t component_count;

        [FieldOffset(1444)] // size = 720, padding = 0
        public ecs_gauge_t query_count;

        [FieldOffset(2164)] // size = 720, padding = 0
        public ecs_gauge_t system_count;

        [FieldOffset(2884)] // size = 720, padding = 0
        public ecs_gauge_t table_count;

        [FieldOffset(3604)] // size = 720, padding = 0
        public ecs_gauge_t empty_table_count;

        [FieldOffset(4324)] // size = 720, padding = 0
        public ecs_gauge_t singleton_table_count;

        [FieldOffset(5044)] // size = 720, padding = 0
        public ecs_gauge_t matched_entity_count;

        [FieldOffset(5764)] // size = 720, padding = 0
        public ecs_gauge_t matched_table_count;

        [FieldOffset(6484)] // size = 960, padding = 0
        public ecs_counter_t new_count;

        [FieldOffset(7444)] // size = 960, padding = 0
        public ecs_counter_t bulk_new_count;

        [FieldOffset(8404)] // size = 960, padding = 0
        public ecs_counter_t delete_count;

        [FieldOffset(9364)] // size = 960, padding = 0
        public ecs_counter_t clear_count;

        [FieldOffset(10324)] // size = 960, padding = 0
        public ecs_counter_t add_count;

        [FieldOffset(11284)] // size = 960, padding = 0
        public ecs_counter_t remove_count;

        [FieldOffset(12244)] // size = 960, padding = 0
        public ecs_counter_t set_count;

        [FieldOffset(13204)] // size = 960, padding = 0
        public ecs_counter_t discard_count;

        [FieldOffset(14164)] // size = 960, padding = 0
        public ecs_counter_t world_time_total_raw;

        [FieldOffset(15124)] // size = 960, padding = 0
        public ecs_counter_t world_time_total;

        [FieldOffset(16084)] // size = 960, padding = 0
        public ecs_counter_t frame_time_total;

        [FieldOffset(17044)] // size = 960, padding = 0
        public ecs_counter_t system_time_total;

        [FieldOffset(18004)] // size = 960, padding = 0
        public ecs_counter_t merge_time_total;

        [FieldOffset(18964)] // size = 720, padding = 0
        public ecs_gauge_t fps;

        [FieldOffset(19684)] // size = 720, padding = 0
        public ecs_gauge_t delta_time;

        [FieldOffset(20404)] // size = 960, padding = 0
        public ecs_counter_t frame_count_total;

        [FieldOffset(21364)] // size = 960, padding = 0
        public ecs_counter_t merge_count_total;

        [FieldOffset(22324)] // size = 960, padding = 0
        public ecs_counter_t pipeline_build_count_total;

        [FieldOffset(23284)] // size = 960, padding = 0
        public ecs_counter_t systems_ran_frame;

        [FieldOffset(24244)] // size = 4, padding = 0
        public int t;
    }

    // Struct @ api_types.h:31:29 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/api_types.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ecs_record_t
    {
        [FieldOffset(0)] // size = 8, padding = 0
        public ecs_table_t* table;

        [FieldOffset(8)] // size = 4, padding = 4
        public int row;
    }

    // Struct @ flecs.h:89:27 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [StructLayout(LayoutKind.Explicit, Size = 304, Pack = 8)]
    public struct ecs_iter_t
    {
        [FieldOffset(0)] // size = 8, padding = 0
        public ecs_world_t* world;

        [FieldOffset(8)] // size = 8, padding = 0
        public ecs_world_t* real_world;

        [FieldOffset(16)] // size = 8, padding = 0
        public ecs_entity_t system;

        [FieldOffset(24)] // size = 8, padding = 0
        public ecs_entity_t @event;

        [FieldOffset(32)] // size = 4, padding = 4
        public ecs_query_iter_kind_t kind;

        [FieldOffset(40)] // size = 8, padding = 0
        public ecs_iter_table_t* table;

        [FieldOffset(48)] // size = 8, padding = 0
        public ecs_query_t* query;

        [FieldOffset(56)] // size = 4, padding = 0
        public int table_count;

        [FieldOffset(60)] // size = 4, padding = 0
        public int inactive_table_count;

        [FieldOffset(64)] // size = 4, padding = 4
        public int column_count;

        [FieldOffset(72)] // size = 8, padding = 0
        public void* table_columns;

        [FieldOffset(80)] // size = 8, padding = 0
        public ecs_entity_t* entities;

        [FieldOffset(88)] // size = 8, padding = 0
        public void* param;

        [FieldOffset(96)] // size = 8, padding = 0
        public void* ctx;

        [FieldOffset(104)] // size = 8, padding = 0
        public void* binding_ctx;

        [FieldOffset(112)] // size = 4, padding = 0
        public float delta_time;

        [FieldOffset(116)] // size = 4, padding = 0
        public float delta_system_time;

        [FieldOffset(120)] // size = 4, padding = 0
        public float world_time;

        [FieldOffset(124)] // size = 4, padding = 0
        public int frame_offset;

        [FieldOffset(128)] // size = 4, padding = 0
        public int offset;

        [FieldOffset(132)] // size = 4, padding = 0
        public int count;

        [FieldOffset(136)] // size = 4, padding = 4
        public int total_count;

        [FieldOffset(144)] // size = 8, padding = 0
        public ecs_entities_t* triggered_by;

        [FieldOffset(152)] // size = 8, padding = 0
        public ecs_entity_t interrupted_by;

        [FieldOffset(160)] // size = 144, padding = 0
        public ecs_iter_t_iter iter;

        // Union @ api_types.h:170:5 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/api_types.h)
        [StructLayout(LayoutKind.Explicit, Size = 144, Pack = 8)]
        public struct ecs_iter_t_iter
        {
            [FieldOffset(0)] // size = 144, padding = 0
            public ecs_scope_iter_t parent;

            [FieldOffset(0)] // size = 120, padding = 0
            public ecs_filter_iter_t filter;

            [FieldOffset(0)] // size = 28, padding = 0
            public ecs_query_iter_t query;

            [FieldOffset(0)] // size = 120, padding = 24
            public ecs_snapshot_iter_t snapshot;
        }
    }

    // Struct @ api_types.h:131:3 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/api_types.h)
    [StructLayout(LayoutKind.Explicit, Size = 120, Pack = 8)]
    public struct ecs_snapshot_iter_t
    {
        [FieldOffset(0)] // size = 56, padding = 0
        public ecs_filter_t filter;

        [FieldOffset(56)] // size = 8, padding = 0
        public ecs_vector_t* tables;

        [FieldOffset(64)] // size = 4, padding = 4
        public int index;

        [FieldOffset(72)] // size = 48, padding = 0
        public ecs_iter_table_t table;
    }

    // Struct @ flecs.h:261:3 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [StructLayout(LayoutKind.Explicit, Size = 56, Pack = 8)]
    public struct ecs_filter_t
    {
        [FieldOffset(0)] // size = 8, padding = 0
        public ecs_term_t* terms;

        [FieldOffset(8)] // size = 4, padding = 0
        public int term_count;

        [FieldOffset(12)] // size = 4, padding = 0
        public int term_count_actual;

        [FieldOffset(16)] // size = 8, padding = 0
        public CString name;

        [FieldOffset(24)] // size = 8, padding = 0
        public CString expr;

        [FieldOffset(32)] // size = 8, padding = 0
        public ecs_type_t include;

        [FieldOffset(40)] // size = 8, padding = 0
        public ecs_type_t exclude;

        [FieldOffset(48)] // size = 4, padding = 0
        public ecs_match_kind_t include_kind;

        [FieldOffset(52)] // size = 4, padding = 0
        public ecs_match_kind_t exclude_kind;
    }

    // Struct @ flecs.h:236:3 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [StructLayout(LayoutKind.Explicit, Size = 192, Pack = 8)]
    public struct ecs_term_t
    {
        [FieldOffset(0)] // size = 8, padding = 0
        public ecs_id_t id;

        [FieldOffset(8)] // size = 4, padding = 4
        public ecs_inout_kind_t inout;

        [FieldOffset(16)] // size = 48, padding = 0
        public ecs_term_id_t pred;

        [FieldOffset(64)] // size = 96, padding = 0
        public fixed ulong _args[96 / 8]; // ecs_term_id_t[2]

        public Span<ecs_term_id_t> args
        {
            get
            {
                fixed (ecs_term_t* @this = &this)
                {
                    var pointer = &@this->_args[0];
                    var span = new Span<ecs_term_id_t>(pointer, 2);
                    return span;
                }
            }
        }

        [FieldOffset(160)] // size = 4, padding = 4
        public ecs_oper_kind_t oper;

        [FieldOffset(168)] // size = 8, padding = 0
        public ecs_id_t role;

        [FieldOffset(176)] // size = 8, padding = 0
        public CString name;

        [FieldOffset(184)] // size = 4, padding = 0
        public int index;

        [FieldOffset(188)] // size = 1, padding = 3
        public CBool move;
    }

    // Struct @ flecs.h:214:3 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [StructLayout(LayoutKind.Explicit, Size = 48, Pack = 8)]
    public struct ecs_term_id_t
    {
        [FieldOffset(0)] // size = 8, padding = 0
        public ecs_entity_t entity;

        [FieldOffset(8)] // size = 8, padding = 0
        public CString name;

        [FieldOffset(16)] // size = 4, padding = 4
        public ecs_var_kind_t var;

        [FieldOffset(24)] // size = 24, padding = 0
        public ecs_term_set_t set;
    }

    // Struct @ flecs.h:205:3 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [StructLayout(LayoutKind.Explicit, Size = 24, Pack = 8)]
    public struct ecs_term_set_t
    {
        [FieldOffset(0)] // size = 8, padding = 0
        public ecs_entity_t relation;

        [FieldOffset(8)] // size = 1, padding = 3
        public byte mask;

        [FieldOffset(12)] // size = 4, padding = 0
        public int min_depth;

        [FieldOffset(16)] // size = 4, padding = 4
        public int max_depth;
    }

    // Struct @ api_types.h:123:3 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/api_types.h)
    [StructLayout(LayoutKind.Explicit, Size = 28, Pack = 4)]
    public struct ecs_query_iter_t
    {
        [FieldOffset(0)] // size = 12, padding = 0
        public ecs_page_iter_t page_iter;

        [FieldOffset(12)] // size = 4, padding = 0
        public int index;

        [FieldOffset(16)] // size = 4, padding = 0
        public int sparse_smallest;

        [FieldOffset(20)] // size = 4, padding = 0
        public int sparse_first;

        [FieldOffset(24)] // size = 4, padding = 0
        public int bitset_first;
    }

    // Struct @ api_types.h:80:3 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/api_types.h)
    [StructLayout(LayoutKind.Explicit, Size = 12, Pack = 4)]
    public struct ecs_page_iter_t
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int offset;

        [FieldOffset(4)] // size = 4, padding = 0
        public int limit;

        [FieldOffset(8)] // size = 4, padding = 0
        public int remaining;
    }

    // Struct @ api_types.h:106:3 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/api_types.h)
    [StructLayout(LayoutKind.Explicit, Size = 120, Pack = 8)]
    public struct ecs_filter_iter_t
    {
        [FieldOffset(0)] // size = 56, padding = 0
        public ecs_filter_t filter;

        [FieldOffset(56)] // size = 8, padding = 0
        public ecs_sparse_t* tables;

        [FieldOffset(64)] // size = 4, padding = 4
        public int index;

        [FieldOffset(72)] // size = 48, padding = 0
        public ecs_iter_table_t table;
    }

    // Struct @ api_types.h:98:3 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/api_types.h)
    [StructLayout(LayoutKind.Explicit, Size = 144, Pack = 8)]
    public struct ecs_scope_iter_t
    {
        [FieldOffset(0)] // size = 56, padding = 0
        public ecs_filter_t filter;

        [FieldOffset(56)] // size = 32, padding = 0
        public ecs_map_iter_t tables;

        [FieldOffset(88)] // size = 4, padding = 4
        public int index;

        [FieldOffset(96)] // size = 48, padding = 0
        public ecs_iter_table_t table;
    }

    // Struct @ map.h:46:3 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/map.h)
    [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 8)]
    public struct ecs_map_iter_t
    {
        [FieldOffset(0)] // size = 8, padding = 0
        public ecs_map_t* map;

        [FieldOffset(8)] // size = 8, padding = 0
        public ecs_bucket_t* bucket;

        [FieldOffset(16)] // size = 4, padding = 0
        public int bucket_index;

        [FieldOffset(20)] // size = 4, padding = 0
        public int element_index;

        [FieldOffset(24)] // size = 8, padding = 0
        public void* payload;
    }

    // Struct @ api_types.h:69:3 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/api_types.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ecs_entities_t
    {
        [FieldOffset(0)] // size = 8, padding = 0
        public ecs_entity_t* array;

        [FieldOffset(8)] // size = 4, padding = 4
        public int count;
    }

    // Struct @ api_types.h:90:3 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/api_types.h)
    [StructLayout(LayoutKind.Explicit, Size = 48, Pack = 8)]
    public struct ecs_iter_table_t
    {
        [FieldOffset(0)] // size = 8, padding = 0
        public int* columns;

        [FieldOffset(8)] // size = 8, padding = 0
        public ecs_table_t* table;

        [FieldOffset(16)] // size = 8, padding = 0
        public ecs_data_t* data;

        [FieldOffset(24)] // size = 8, padding = 0
        public ecs_entity_t* components;

        [FieldOffset(32)] // size = 8, padding = 0
        public ecs_type_t* types;

        [FieldOffset(40)] // size = 8, padding = 0
        public ecs_ref_t* references;
    }

    // Struct @ flecs.h:92:26 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [StructLayout(LayoutKind.Explicit, Size = 48, Pack = 8)]
    public struct ecs_ref_t
    {
        [FieldOffset(0)] // size = 8, padding = 0
        public ecs_entity_t entity;

        [FieldOffset(8)] // size = 8, padding = 0
        public ecs_entity_t component;

        [FieldOffset(16)] // size = 8, padding = 0
        public void* table;

        [FieldOffset(24)] // size = 4, padding = 0
        public int row;

        [FieldOffset(28)] // size = 4, padding = 0
        public int alloc_count;

        [FieldOffset(32)] // size = 8, padding = 0
        public ecs_record_t* @record;

        [FieldOffset(40)] // size = 8, padding = 0
        public void* ptr;
    }

    // Struct @ reader_writer.h:128:3 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/reader_writer.h)
    [StructLayout(LayoutKind.Explicit, Size = 128, Pack = 8)]
    public struct ecs_writer_t
    {
        [FieldOffset(0)] // size = 8, padding = 0
        public ecs_world_t* world;

        [FieldOffset(8)] // size = 4, padding = 4
        public ecs_blob_header_kind_t state;

        [FieldOffset(16)] // size = 104, padding = 0
        public ecs_table_writer_t table;

        [FieldOffset(120)] // size = 4, padding = 4
        public int error;
    }

    // Struct @ reader_writer.h:121:3 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/reader_writer.h)
    [StructLayout(LayoutKind.Explicit, Size = 104, Pack = 8)]
    public struct ecs_table_writer_t
    {
        [FieldOffset(0)] // size = 4, padding = 4
        public ecs_blob_header_kind_t state;

        [FieldOffset(8)] // size = 8, padding = 0
        public ecs_table_t* table;

        [FieldOffset(16)] // size = 8, padding = 0
        public ecs_vector_t* column_vector;

        [FieldOffset(24)] // size = 4, padding = 0
        public int type_count;

        [FieldOffset(28)] // size = 4, padding = 0
        public int type_max_count;

        [FieldOffset(32)] // size = 4, padding = 4
        public ecs_size_t type_written;

        [FieldOffset(40)] // size = 8, padding = 0
        public ecs_entity_t* type_array;

        [FieldOffset(48)] // size = 4, padding = 0
        public int column_index;

        [FieldOffset(52)] // size = 2, padding = 0
        public short column_size;

        [FieldOffset(54)] // size = 2, padding = 0
        public short column_alignment;

        [FieldOffset(56)] // size = 4, padding = 4
        public ecs_size_t column_written;

        [FieldOffset(64)] // size = 8, padding = 0
        public void* column_data;

        [FieldOffset(72)] // size = 4, padding = 0
        public int row_count;

        [FieldOffset(76)] // size = 4, padding = 0
        public int row_index;

        [FieldOffset(80)] // size = 24, padding = 0
        public ecs_name_writer_t name;
    }

    // Struct @ reader_writer.h:98:3 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/reader_writer.h)
    [StructLayout(LayoutKind.Explicit, Size = 24, Pack = 8)]
    public struct ecs_name_writer_t
    {
        [FieldOffset(0)] // size = 8, padding = 0
        public CString name;

        [FieldOffset(8)] // size = 4, padding = 0
        public int written;

        [FieldOffset(12)] // size = 4, padding = 0
        public int len;

        [FieldOffset(16)] // size = 4, padding = 4
        public int max_len;
    }

    // Struct @ reader_writer.h:91:3 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/reader_writer.h)
    [StructLayout(LayoutKind.Explicit, Size = 744, Pack = 8)]
    public struct ecs_reader_t
    {
        [FieldOffset(0)] // size = 8, padding = 0
        public ecs_world_t* world;

        [FieldOffset(8)] // size = 4, padding = 4
        public ecs_blob_header_kind_t state;

        [FieldOffset(16)] // size = 304, padding = 0
        public ecs_iter_t data_iter;

        [FieldOffset(320)] // size = 8, padding = 0
        public ecs_iter_next_action_t data_next;

        [FieldOffset(328)] // size = 304, padding = 0
        public ecs_iter_t component_iter;

        [FieldOffset(632)] // size = 8, padding = 0
        public ecs_iter_next_action_t component_next;

        [FieldOffset(640)] // size = 104, padding = 0
        public ecs_table_reader_t table;
    }

    // Struct @ reader_writer.h:81:3 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/reader_writer.h)
    [StructLayout(LayoutKind.Explicit, Size = 104, Pack = 8)]
    public struct ecs_table_reader_t
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public ecs_blob_header_kind_t state;

        [FieldOffset(4)] // size = 4, padding = 0
        public int table_index;

        [FieldOffset(8)] // size = 8, padding = 0
        public ecs_table_t* table;

        [FieldOffset(16)] // size = 8, padding = 0
        public ecs_data_t* data;

        [FieldOffset(24)] // size = 4, padding = 4
        public ecs_size_t type_written;

        [FieldOffset(32)] // size = 8, padding = 0
        public ecs_type_t type;

        [FieldOffset(40)] // size = 8, padding = 0
        public ecs_vector_t* column_vector;

        [FieldOffset(48)] // size = 4, padding = 0
        public int column_index;

        [FieldOffset(52)] // size = 4, padding = 0
        public int total_columns;

        [FieldOffset(56)] // size = 8, padding = 0
        public void* column_data;

        [FieldOffset(64)] // size = 2, padding = 0
        public short column_size;

        [FieldOffset(66)] // size = 2, padding = 0
        public short column_alignment;

        [FieldOffset(68)] // size = 4, padding = 0
        public ecs_size_t column_written;

        [FieldOffset(72)] // size = 4, padding = 0
        public int row_index;

        [FieldOffset(76)] // size = 4, padding = 0
        public int row_count;

        [FieldOffset(80)] // size = 8, padding = 0
        public CString name;

        [FieldOffset(88)] // size = 4, padding = 0
        public ecs_size_t name_len;

        [FieldOffset(92)] // size = 4, padding = 0
        public ecs_size_t name_written;

        [FieldOffset(96)] // size = 1, padding = 7
        public CBool has_next_table;
    }

    // Struct @ dbg.h:35:3 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/dbg.h)
    [StructLayout(LayoutKind.Explicit, Size = 72, Pack = 8)]
    public struct ecs_dbg_table_t
    {
        [FieldOffset(0)] // size = 8, padding = 0
        public ecs_table_t* table;

        [FieldOffset(8)] // size = 8, padding = 0
        public ecs_type_t type;

        [FieldOffset(16)] // size = 8, padding = 0
        public ecs_type_t shared;

        [FieldOffset(24)] // size = 8, padding = 0
        public ecs_type_t container;

        [FieldOffset(32)] // size = 8, padding = 0
        public ecs_type_t parent_entities;

        [FieldOffset(40)] // size = 8, padding = 0
        public ecs_type_t base_entities;

        [FieldOffset(48)] // size = 8, padding = 0
        public ecs_vector_t* systems_matched;

        [FieldOffset(56)] // size = 8, padding = 0
        public ecs_entity_t* entities;

        [FieldOffset(64)] // size = 4, padding = 4
        public int entities_count;
    }

    // Struct @ dbg.h:23:3 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/dbg.h)
    [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 8)]
    public struct ecs_dbg_entity_t
    {
        [FieldOffset(0)] // size = 8, padding = 0
        public ecs_entity_t entity;

        [FieldOffset(8)] // size = 8, padding = 0
        public ecs_table_t* table;

        [FieldOffset(16)] // size = 8, padding = 0
        public ecs_type_t type;

        [FieldOffset(24)] // size = 4, padding = 0
        public int row;

        [FieldOffset(28)] // size = 1, padding = 3
        public CBool is_watched;
    }

    // Struct @ api_types.h:202:3 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/api_types.h)
    [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 4)]
    public struct ecs_match_failure_t
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public EcsMatchFailureReason reason;

        [FieldOffset(4)] // size = 4, padding = 0
        public int column;
    }

    // Struct @ system.h:277:3 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/modules/system.h)
    [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 8)]
    public struct ecs_dbg_system_t
    {
        [FieldOffset(0)] // size = 8, padding = 0
        public ecs_entity_t system;

        [FieldOffset(8)] // size = 4, padding = 0
        public int entities_matched_count;

        [FieldOffset(12)] // size = 4, padding = 0
        public int active_table_count;

        [FieldOffset(16)] // size = 4, padding = 0
        public int inactive_table_count;

        [FieldOffset(20)] // size = 1, padding = 3
        public CBool enabled;

        [FieldOffset(24)] // size = 8, padding = 0
        public void* system_data;
    }

    // Struct @ system.h:121:3 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/modules/system.h)
    [StructLayout(LayoutKind.Explicit, Size = 3800, Pack = 8)]
    public struct ecs_system_desc_t
    {
        [FieldOffset(0)] // size = 568, padding = 0
        public ecs_entity_desc_t entity;

        [FieldOffset(568)] // size = 3152, padding = 0
        public ecs_query_desc_t query;

        [FieldOffset(3720)] // size = 8, padding = 0
        public ecs_iter_action_t callback;

        [FieldOffset(3728)] // size = 8, padding = 0
        public ecs_system_status_action_t status_callback;

        [FieldOffset(3736)] // size = 8, padding = 0
        public void* ctx;

        [FieldOffset(3744)] // size = 8, padding = 0
        public void* status_ctx;

        [FieldOffset(3752)] // size = 8, padding = 0
        public void* binding_ctx;

        [FieldOffset(3760)] // size = 8, padding = 0
        public ecs_ctx_free_t ctx_free;

        [FieldOffset(3768)] // size = 8, padding = 0
        public ecs_ctx_free_t status_ctx_free;

        [FieldOffset(3776)] // size = 8, padding = 0
        public ecs_ctx_free_t binding_ctx_free;

        [FieldOffset(3784)] // size = 4, padding = 0
        public float interval;

        [FieldOffset(3788)] // size = 4, padding = 0
        public int rate;

        [FieldOffset(3792)] // size = 8, padding = 0
        public ecs_entity_t tick_source;
    }

    // Struct @ flecs.h:405:3 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [StructLayout(LayoutKind.Explicit, Size = 3152, Pack = 8)]
    public struct ecs_query_desc_t
    {
        [FieldOffset(0)] // size = 3104, padding = 0
        public ecs_filter_desc_t filter;

        [FieldOffset(3104)] // size = 8, padding = 0
        public ecs_id_t order_by_id;

        [FieldOffset(3112)] // size = 8, padding = 0
        public ecs_compare_action_t order_by;

        [FieldOffset(3120)] // size = 8, padding = 0
        public ecs_id_t group_by_id;

        [FieldOffset(3128)] // size = 8, padding = 0
        public ecs_rank_type_action_t group_by;

        [FieldOffset(3136)] // size = 8, padding = 0
        public ecs_query_t* parent;

        [FieldOffset(3144)] // size = 8, padding = 0
        public ecs_entity_t system;
    }

    // Struct @ flecs.h:371:3 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [StructLayout(LayoutKind.Explicit, Size = 3104, Pack = 8)]
    public struct ecs_filter_desc_t
    {
        [FieldOffset(0)] // size = 3072, padding = 0
        public fixed ulong _terms[3072 / 8]; // ecs_term_t[16]

        public Span<ecs_term_t> terms
        {
            get
            {
                fixed (ecs_filter_desc_t* @this = &this)
                {
                    var pointer = &@this->_terms[0];
                    var span = new Span<ecs_term_t>(pointer, 16);
                    return span;
                }
            }
        }

        [FieldOffset(3072)] // size = 8, padding = 0
        public ecs_term_t* terms_buffer;

        [FieldOffset(3080)] // size = 4, padding = 0
        public int terms_buffer_count;

        [FieldOffset(3084)] // size = 1, padding = 3
        public CBool substitute_default;

        [FieldOffset(3088)] // size = 8, padding = 0
        public CString expr;

        [FieldOffset(3096)] // size = 8, padding = 0
        public CString name;
    }

    // Struct @ flecs.h:332:3 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [StructLayout(LayoutKind.Explicit, Size = 568, Pack = 8)]
    public struct ecs_entity_desc_t
    {
        [FieldOffset(0)] // size = 8, padding = 0
        public ecs_entity_t entity;

        [FieldOffset(8)] // size = 8, padding = 0
        public CString name;

        [FieldOffset(16)] // size = 8, padding = 0
        public CString sep;

        [FieldOffset(24)] // size = 8, padding = 0
        public CString symbol;

        [FieldOffset(32)] // size = 1, padding = 7
        public CBool use_low_id;

        [FieldOffset(40)] // size = 256, padding = 0
        public fixed ulong _add[256 / 8]; // ecs_id_t[32]

        public Span<ecs_id_t> add
        {
            get
            {
                fixed (ecs_entity_desc_t* @this = &this)
                {
                    var pointer = &@this->_add[0];
                    var span = new Span<ecs_id_t>(pointer, 32);
                    return span;
                }
            }
        }

        [FieldOffset(296)] // size = 256, padding = 0
        public fixed ulong _remove[256 / 8]; // ecs_id_t[32]

        public Span<ecs_id_t> remove
        {
            get
            {
                fixed (ecs_entity_desc_t* @this = &this)
                {
                    var pointer = &@this->_remove[0];
                    var span = new Span<ecs_id_t>(pointer, 32);
                    return span;
                }
            }
        }

        [FieldOffset(552)] // size = 8, padding = 0
        public CString add_expr;

        [FieldOffset(560)] // size = 8, padding = 0
        public CString remove_expr;
    }

    // Struct @ flecs.h:440:3 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [StructLayout(LayoutKind.Explicit, Size = 880, Pack = 8)]
    public struct ecs_trigger_desc_t
    {
        [FieldOffset(0)] // size = 568, padding = 0
        public ecs_entity_desc_t entity;

        [FieldOffset(568)] // size = 192, padding = 0
        public ecs_term_t term;

        [FieldOffset(760)] // size = 8, padding = 0
        public CString name;

        [FieldOffset(768)] // size = 8, padding = 0
        public CString expr;

        [FieldOffset(776)] // size = 64, padding = 0
        public fixed ulong _events[64 / 8]; // ecs_entity_t[8]

        public Span<ecs_entity_t> events
        {
            get
            {
                fixed (ecs_trigger_desc_t* @this = &this)
                {
                    var pointer = &@this->_events[0];
                    var span = new Span<ecs_entity_t>(pointer, 8);
                    return span;
                }
            }
        }

        [FieldOffset(840)] // size = 8, padding = 0
        public ecs_iter_action_t callback;

        [FieldOffset(848)] // size = 8, padding = 0
        public void* ctx;

        [FieldOffset(856)] // size = 8, padding = 0
        public void* binding_ctx;

        [FieldOffset(864)] // size = 8, padding = 0
        public ecs_ctx_free_t ctx_free;

        [FieldOffset(872)] // size = 8, padding = 0
        public ecs_ctx_free_t binding_ctx_free;
    }

    // Struct @ flecs.h:348:3 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [StructLayout(LayoutKind.Explicit, Size = 832, Pack = 8)]
    public struct ecs_type_desc_t
    {
        [FieldOffset(0)] // size = 568, padding = 0
        public ecs_entity_desc_t entity;

        [FieldOffset(568)] // size = 256, padding = 0
        public fixed ulong _ids[256 / 8]; // ecs_id_t[32]

        public Span<ecs_id_t> ids
        {
            get
            {
                fixed (ecs_type_desc_t* @this = &this)
                {
                    var pointer = &@this->_ids[0];
                    var span = new Span<ecs_id_t>(pointer, 32);
                    return span;
                }
            }
        }

        [FieldOffset(824)] // size = 8, padding = 0
        public CString ids_expr;
    }

    // Struct @ flecs.h:340:3 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [StructLayout(LayoutKind.Explicit, Size = 584, Pack = 8)]
    public struct ecs_component_desc_t
    {
        [FieldOffset(0)] // size = 568, padding = 0
        public ecs_entity_desc_t entity;

        [FieldOffset(568)] // size = 8, padding = 0
        public ulong size;

        [FieldOffset(576)] // size = 8, padding = 0
        public ulong alignment;
    }

    // Struct @ flecs.h:520:3 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [StructLayout(LayoutKind.Explicit, Size = 88, Pack = 8)]
    public struct ecs_world_info_t
    {
        [FieldOffset(0)] // size = 8, padding = 0
        public ecs_entity_t last_component_id;

        [FieldOffset(8)] // size = 8, padding = 0
        public ecs_entity_t last_id;

        [FieldOffset(16)] // size = 8, padding = 0
        public ecs_entity_t min_id;

        [FieldOffset(24)] // size = 8, padding = 0
        public ecs_entity_t max_id;

        [FieldOffset(32)] // size = 4, padding = 0
        public float delta_time_raw;

        [FieldOffset(36)] // size = 4, padding = 0
        public float delta_time;

        [FieldOffset(40)] // size = 4, padding = 0
        public float time_scale;

        [FieldOffset(44)] // size = 4, padding = 0
        public float target_fps;

        [FieldOffset(48)] // size = 4, padding = 0
        public float frame_time_total;

        [FieldOffset(52)] // size = 4, padding = 0
        public float system_time_total;

        [FieldOffset(56)] // size = 4, padding = 0
        public float merge_time_total;

        [FieldOffset(60)] // size = 4, padding = 0
        public float world_time_total;

        [FieldOffset(64)] // size = 4, padding = 0
        public float world_time_total_raw;

        [FieldOffset(68)] // size = 4, padding = 0
        public int frame_count_total;

        [FieldOffset(72)] // size = 4, padding = 0
        public int merge_count_total;

        [FieldOffset(76)] // size = 4, padding = 0
        public int pipeline_build_count_total;

        [FieldOffset(80)] // size = 4, padding = 4
        public int systems_ran_frame;
    }

    // Struct @ flecs.h:479:3 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [StructLayout(LayoutKind.Explicit, Size = 40, Pack = 8)]
    public struct EcsComponentLifecycle
    {
        [FieldOffset(0)] // size = 8, padding = 0
        public ecs_xtor_t ctor;

        [FieldOffset(8)] // size = 8, padding = 0
        public ecs_xtor_t dtor;

        [FieldOffset(16)] // size = 8, padding = 0
        public ecs_copy_t copy;

        [FieldOffset(24)] // size = 8, padding = 0
        public ecs_move_t move;

        [FieldOffset(32)] // size = 8, padding = 0
        public void* ctx;
    }

    // Struct @ os_api.h:43:3 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/os_api.h)
    [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 4)]
    public struct ecs_time_t
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public uint sec;

        [FieldOffset(4)] // size = 4, padding = 0
        public uint nanosec;
    }

    // Struct @ os_api.h:251:3 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/os_api.h)
    [StructLayout(LayoutKind.Explicit, Size = 256, Pack = 8)]
    public struct ecs_os_api_t
    {
        [FieldOffset(0)] // size = 8, padding = 0
        public ecs_os_api_init_t init_;

        [FieldOffset(8)] // size = 8, padding = 0
        public ecs_os_api_fini_t fini_;

        [FieldOffset(16)] // size = 8, padding = 0
        public ecs_os_api_malloc_t malloc_;

        [FieldOffset(24)] // size = 8, padding = 0
        public ecs_os_api_realloc_t realloc_;

        [FieldOffset(32)] // size = 8, padding = 0
        public ecs_os_api_calloc_t calloc_;

        [FieldOffset(40)] // size = 8, padding = 0
        public ecs_os_api_free_t free_;

        [FieldOffset(48)] // size = 8, padding = 0
        public ecs_os_api_strdup_t strdup_;

        [FieldOffset(56)] // size = 8, padding = 0
        public ecs_os_api_thread_new_t thread_new_;

        [FieldOffset(64)] // size = 8, padding = 0
        public ecs_os_api_thread_join_t thread_join_;

        [FieldOffset(72)] // size = 8, padding = 0
        public ecs_os_api_ainc_t ainc_;

        [FieldOffset(80)] // size = 8, padding = 0
        public ecs_os_api_ainc_t adec_;

        [FieldOffset(88)] // size = 8, padding = 0
        public ecs_os_api_mutex_new_t mutex_new_;

        [FieldOffset(96)] // size = 8, padding = 0
        public ecs_os_api_mutex_free_t mutex_free_;

        [FieldOffset(104)] // size = 8, padding = 0
        public ecs_os_api_mutex_lock_t mutex_lock_;

        [FieldOffset(112)] // size = 8, padding = 0
        public ecs_os_api_mutex_lock_t mutex_unlock_;

        [FieldOffset(120)] // size = 8, padding = 0
        public ecs_os_api_cond_new_t cond_new_;

        [FieldOffset(128)] // size = 8, padding = 0
        public ecs_os_api_cond_free_t cond_free_;

        [FieldOffset(136)] // size = 8, padding = 0
        public ecs_os_api_cond_signal_t cond_signal_;

        [FieldOffset(144)] // size = 8, padding = 0
        public ecs_os_api_cond_broadcast_t cond_broadcast_;

        [FieldOffset(152)] // size = 8, padding = 0
        public ecs_os_api_cond_wait_t cond_wait_;

        [FieldOffset(160)] // size = 8, padding = 0
        public ecs_os_api_sleep_t sleep_;

        [FieldOffset(168)] // size = 8, padding = 0
        public ecs_os_api_get_time_t get_time_;

        [FieldOffset(176)] // size = 8, padding = 0
        public ecs_os_api_log_t log_;

        [FieldOffset(184)] // size = 8, padding = 0
        public ecs_os_api_log_t log_error_;

        [FieldOffset(192)] // size = 8, padding = 0
        public ecs_os_api_log_t log_debug_;

        [FieldOffset(200)] // size = 8, padding = 0
        public ecs_os_api_log_t log_warning_;

        [FieldOffset(208)] // size = 8, padding = 0
        public ecs_os_api_abort_t abort_;

        [FieldOffset(216)] // size = 8, padding = 0
        public ecs_os_api_dlopen_t dlopen_;

        [FieldOffset(224)] // size = 8, padding = 0
        public ecs_os_api_dlproc_t dlproc_;

        [FieldOffset(232)] // size = 8, padding = 0
        public ecs_os_api_dlclose_t dlclose_;

        [FieldOffset(240)] // size = 8, padding = 0
        public ecs_os_api_module_to_path_t module_to_dl_;

        [FieldOffset(248)] // size = 8, padding = 0
        public ecs_os_api_module_to_path_t module_to_etc_;
    }

    // Struct @ strbuf.h:75:3 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/strbuf.h)
    [StructLayout(LayoutKind.Explicit, Size = 1088, Pack = 8)]
    public struct ecs_strbuf_t
    {
        [FieldOffset(0)] // size = 8, padding = 0
        public CString buf;

        [FieldOffset(8)] // size = 4, padding = 0
        public int max;

        [FieldOffset(12)] // size = 4, padding = 0
        public int size;

        [FieldOffset(16)] // size = 4, padding = 4
        public int elementCount;

        [FieldOffset(24)] // size = 536, padding = 0
        public ecs_strbuf_element_embedded firstElement;

        [FieldOffset(560)] // size = 8, padding = 0
        public ecs_strbuf_element* current;

        [FieldOffset(568)] // size = 512, padding = 0
        public fixed ulong _list_stack[512 / 8]; // ecs_strbuf_list_elem[32]

        public Span<ecs_strbuf_list_elem> list_stack
        {
            get
            {
                fixed (ecs_strbuf_t* @this = &this)
                {
                    var pointer = &@this->_list_stack[0];
                    var span = new Span<ecs_strbuf_list_elem>(pointer, 32);
                    return span;
                }
            }
        }

        [FieldOffset(1080)] // size = 4, padding = 4
        public int list_sp;
    }

    // Struct @ strbuf.h:50:3 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/strbuf.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ecs_strbuf_list_elem
    {
        [FieldOffset(0)] // size = 4, padding = 4
        public int count;

        [FieldOffset(8)] // size = 8, padding = 0
        public CString separator;
    }

    // Struct @ strbuf.h:35:3 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/strbuf.h)
    [StructLayout(LayoutKind.Explicit, Size = 24, Pack = 8)]
    public struct ecs_strbuf_element
    {
        [FieldOffset(0)] // size = 1, padding = 3
        public CBool buffer_embedded;

        [FieldOffset(4)] // size = 4, padding = 0
        public int pos;

        [FieldOffset(8)] // size = 8, padding = 0
        public CString buf;

        [FieldOffset(16)] // size = 8, padding = 0
        public ecs_strbuf_element* next;
    }

    // Struct @ strbuf.h:40:3 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/strbuf.h)
    [StructLayout(LayoutKind.Explicit, Size = 536, Pack = 8)]
    public struct ecs_strbuf_element_embedded
    {
        [FieldOffset(0)] // size = 24, padding = 0
        public ecs_strbuf_element super;

        [FieldOffset(24)] // size = 512, padding = 0
        public fixed byte _buf[512 / 1]; // char[512]

        public string buf
        {
            get
            {
                fixed (ecs_strbuf_element_embedded* @this = &this)
                {
                    var pointer = &@this->_buf[0];
                    var cString = new CString(pointer);
                    return Runtime.String(cString);
                }
            }
        }
    }

    // OpaqueType @ map.h:36:26 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/map.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ecs_map_t
    {
    }

    // OpaqueType @ flecs.h:80:28 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ecs_world_t
    {
    }

    // OpaqueType @ flecs.h:83:28 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ecs_query_t
    {
    }

    // OpaqueType @ api_types.h:28:28 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/api_types.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ecs_table_t
    {
    }

    // OpaqueType @ snapshot.h:23:31 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/snapshot.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ecs_snapshot_t
    {
    }

    // OpaqueType @ api_types.h:40:29 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/api_types.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ecs_sparse_t
    {
    }

    // OpaqueType @ map.h:37:29 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/map.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ecs_bucket_t
    {
    }

    // OpaqueType @ api_types.h:37:27 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/api_types.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ecs_data_t
    {
    }

    // OpaqueType @ queue.h:18:28 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/queue.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ecs_queue_t
    {
    }

    // Typedef @ flecs.h:74:18 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
    public struct ecs_entity_t
    {
        [FieldOffset(0)] // size = 8, padding = 0
        public ecs_id_t Data;

        public static implicit operator ecs_id_t(ecs_entity_t data) => data.Data;
        public static implicit operator ecs_entity_t(ecs_id_t data) => new() { Data = data };
    }

    // Typedef @ flecs.h:71:18 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
    public struct ecs_id_t
    {
        [FieldOffset(0)] // size = 8, padding = 0
        public ulong Data;

        public static implicit operator ulong(ecs_id_t data) => data.Data;
        public static implicit operator ecs_id_t(ulong data) => new() { Data = data };
    }

    // Typedef @ flecs.h:77:29 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
    public struct ecs_type_t
    {
        [FieldOffset(0)] // size = 8, padding = 0
        public ecs_vector_t* Data;

        public static implicit operator ecs_vector_t*(ecs_type_t data) => data.Data;
        public static implicit operator ecs_type_t(ecs_vector_t* data) => new() { Data = data };
    }

    // Typedef @ api_defines.h:67:17 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/api_defines.h)
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ecs_size_t
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Data;

        public static implicit operator int(ecs_size_t data) => data.Data;
        public static implicit operator ecs_size_t(int data) => new() { Data = data };
    }

    // Typedef @ os_api.h:55:19 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/os_api.h)
    [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
    public struct ecs_os_dl_t
    {
        [FieldOffset(0)] // size = 8, padding = 0
        public UIntPtr Data;

        public static implicit operator UIntPtr(ecs_os_dl_t data) => data.Data;
        public static implicit operator ecs_os_dl_t(UIntPtr data) => new() { Data = data };
    }

    // Typedef @ os_api.h:54:19 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/os_api.h)
    [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
    public struct ecs_os_mutex_t
    {
        [FieldOffset(0)] // size = 8, padding = 0
        public UIntPtr Data;

        public static implicit operator UIntPtr(ecs_os_mutex_t data) => data.Data;
        public static implicit operator ecs_os_mutex_t(UIntPtr data) => new() { Data = data };
    }

    // Typedef @ os_api.h:53:19 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/os_api.h)
    [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
    public struct ecs_os_cond_t
    {
        [FieldOffset(0)] // size = 8, padding = 0
        public UIntPtr Data;

        public static implicit operator UIntPtr(ecs_os_cond_t data) => data.Data;
        public static implicit operator ecs_os_cond_t(UIntPtr data) => new() { Data = data };
    }

    // Typedef @ os_api.h:52:19 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/os_api.h)
    [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
    public struct ecs_os_thread_t
    {
        [FieldOffset(0)] // size = 8, padding = 0
        public UIntPtr Data;

        public static implicit operator UIntPtr(ecs_os_thread_t data) => data.Data;
        public static implicit operator ecs_os_thread_t(UIntPtr data) => new() { Data = data };
    }

    // Typedef @ map.h:38:18 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/map.h)
    [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
    public struct ecs_map_key_t
    {
        [FieldOffset(0)] // size = 8, padding = 0
        public ulong Data;

        public static implicit operator ulong(ecs_map_key_t data) => data.Data;
        public static implicit operator ecs_map_key_t(ulong data) => new() { Data = data };
    }

    // Enum @ flecs.h:244:3 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    public enum ecs_match_kind_t : uint
    {
        EcsMatchDefault = 0U,
        EcsMatchAll = 1U,
        EcsMatchAny = 2U,
        EcsMatchExact = 3U
    }

    // Enum @ flecs.h:194:3 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    public enum ecs_oper_kind_t : uint
    {
        EcsAnd = 0U,
        EcsOr = 1U,
        EcsNot = 2U,
        EcsOptional = 3U,
        EcsAndFrom = 4U,
        EcsOrFrom = 5U,
        EcsNotFrom = 6U
    }

    // Enum @ flecs.h:183:3 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    public enum ecs_var_kind_t : uint
    {
        EcsVarDefault = 0U,
        EcsVarIsEntity = 1U,
        EcsVarIsVariable = 2U
    }

    // Enum @ flecs.h:176:3 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs.h)
    public enum ecs_inout_kind_t : uint
    {
        EcsInOutDefault = 0U,
        EcsInOut = 1U,
        EcsIn = 2U,
        EcsOut = 3U
    }

    // Enum @ api_types.h:114:3 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/api_types.h)
    public enum ecs_query_iter_kind_t : uint
    {
        EcsQuerySimpleIter = 0U,
        EcsQueryPagedIter = 1U,
        EcsQuerySortedIter = 2U,
        EcsQuerySwitchIter = 3U
    }

    // Enum @ reader_writer.h:47:3 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/addons/reader_writer.h)
    public enum ecs_blob_header_kind_t : uint
    {
        EcsStreamHeader = 0U,
        EcsTableSegment = 1U,
        EcsFooterSegment = 2U,
        EcsTableHeader = 3U,
        EcsTableTypeSize = 4U,
        EcsTableType = 5U,
        EcsTableSize = 6U,
        EcsTableColumn = 7U,
        EcsTableColumnHeader = 8U,
        EcsTableColumnSize = 9U,
        EcsTableColumnData = 10U,
        EcsTableColumnNameHeader = 11U,
        EcsTableColumnNameLength = 12U,
        EcsTableColumnName = 13U,
        EcsStreamFooter = 14U
    }

    // Enum @ api_types.h:197:3 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/private/api_types.h)
    public enum EcsMatchFailureReason : uint
    {
        EcsMatchOk = 0U,
        EcsMatchNotASystem = 1U,
        EcsMatchSystemIsATask = 2U,
        EcsMatchEntityIsDisabled = 3U,
        EcsMatchEntityIsPrefab = 4U,
        EcsMatchFromSelf = 5U,
        EcsMatchFromOwned = 6U,
        EcsMatchFromShared = 7U,
        EcsMatchFromContainer = 8U,
        EcsMatchFromEntity = 9U,
        EcsMatchOrFromSelf = 10U,
        EcsMatchOrFromOwned = 11U,
        EcsMatchOrFromShared = 12U,
        EcsMatchOrFromContainer = 13U,
        EcsMatchNotFromSelf = 14U,
        EcsMatchNotFromOwned = 15U,
        EcsMatchNotFromShared = 16U,
        EcsMatchNotFromContainer = 17U
    }

    // Enum @ system.h:52:3 (/Users/lstranks/Programming/c2cs/ext/flecs/include/flecs/modules/system.h)
    public enum ecs_system_status_t : uint
    {
        EcsSystemStatusNone = 0U,
        EcsSystemEnabled = 1U,
        EcsSystemDisabled = 2U,
        EcsSystemActivated = 3U,
        EcsSystemDeactivated = 4U
    }
}
